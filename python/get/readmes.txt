****************************************************************************************************
mojombo/grit
https://api.github.com/repos/mojombo/grit/readme?ref=master
{'name': 'README.md', 'path': 'README.md', 'sha': 'a821222a46d3cb4e46bef88a89fa1c3a15da626d', 'size': 6641, 'url': 'https://api.github.com/repos/mojombo/grit/contents/README.md?ref=master', 'html_url': 'https://github.com/mojombo/grit/blob/master/README.md', 'git_url': 'https://api.github.com/repos/mojombo/grit/git/blobs/a821222a46d3cb4e46bef88a89fa1c3a15da626d', 'download_url': 'https://raw.githubusercontent.com/mojombo/grit/master/README.md', 'type': 'file', 'content': b'Grit\n====\n\n**Grit is no longer maintained. Check out [rugged](https://github.com/libgit2/rugged).**\n\nGrit gives you object oriented read/write access to Git repositories via Ruby.\nThe main goals are stability and performance. To this end, some of the\ninteractions with Git repositories are done by shelling out to the system\'s\n`git` command, and other interactions are done with pure Ruby\nreimplementations of core Git functionality. This choice, however, is\ntransparent to end users, and you need not know which method is being used.\n\nThis software was developed to power GitHub, and should be considered\nproduction ready. An extensive test suite is provided to verify its\ncorrectness.\n\nGrit is maintained by Tom Preston-Werner, Scott Chacon, Chris Wanstrath, and\nPJ Hyett.\n\nThis documentation is accurate as of Grit 2.3.\n\n\n## Requirements\n\n* git (http://git-scm.com) tested with 1.7.2.1\n\n\n## Install\n\nEasiest install is via RubyGems:\n\n    $ gem install grit\n\n\n## Source\n\nGrit\'s Git repo is available on GitHub, which can be browsed at:\n\n    http://github.com/mojombo/grit\n\nand cloned with:\n\n    git clone git://github.com/mojombo/grit.git\n\n\n### Development\n\nYou will need these gems to get tests to pass:\n\n* mocha\n\n\n### Contributing\n\nIf you\'d like to hack on Grit, follow these instructions. To get all of the dependencies, install the gem first.\n\n1. Fork the project to your own account\n1. Clone down your fork\n1. Create a thoughtfully named topic branch to contain your change\n1. Hack away\n1. Add tests and make sure everything still passes by running `rake`\n1. If you are adding new functionality, document it in README.md\n1. Do not change the version number, I will do that on my end\n1. If necessary, rebase your commits into logical chunks, without errors\n1. Push the branch up to GitHub\n1. Send a pull request for your branch\n\n\n## Usage\n\nGrit gives you object model access to your Git repositories. Once you have\ncreated a `Repo` object, you can traverse it to find parent commits,\ntrees, blobs, etc.\n\n\n### Initialize a Repo object\n\nThe first step is to create a `Grit::Repo` object to represent your repo. In\nthis documentation I include the `Grit` module to reduce typing.\n\n    require \'grit\'\n    repo = Grit::Repo.new("/Users/tom/dev/grit")\n\nIn the above example, the directory `/Users/tom/dev/grit` is my working\ndirectory and contains the `.git` directory. You can also initialize Grit with\na bare repo.\n\n    repo = Repo.new("/var/git/grit.git")\n\n\n### Getting a list of commits\n\nFrom the `Repo` object, you can get a list of commits as an array of `Commit`\nobjects.\n\n    repo.commits\n    # => [#<Grit::Commit "e80bbd2ce67651aa18e57fb0b43618ad4baf7750">,\n          #<Grit::Commit "91169e1f5fa4de2eaea3f176461f5dc784796769">,\n          #<Grit::Commit "038af8c329ef7c1bae4568b98bd5c58510465493">,\n          #<Grit::Commit "40d3057d09a7a4d61059bca9dca5ae698de58cbe">,\n          #<Grit::Commit "4ea50f4754937bf19461af58ce3b3d24c77311d9">]\n\nCalled without arguments, `Repo#commits` returns a list of up to ten commits\nreachable by the **master** branch (starting at the latest commit). You can\nask for commits beginning at a different branch, commit, tag, etc.\n\n    repo.commits(\'mybranch\')\n    repo.commits(\'40d3057d09a7a4d61059bca9dca5ae698de58cbe\')\n    repo.commits(\'v0.1\')\n\nYou can specify the maximum number of commits to return.\n\n    repo.commits(\'master\', 100)\n\nIf you need paging, you can specify a number of commits to skip.\n\n    repo.commits(\'master\', 10, 20)\n\nThe above will return commits 21-30 from the commit list.\n\n\n### The Commit object\n\n`Commit` objects contain information about that commit.\n\n    head = repo.commits.first\n\n    head.id\n    # => "e80bbd2ce67651aa18e57fb0b43618ad4baf7750"\n\n    head.parents\n    # => [#<Grit::Commit "91169e1f5fa4de2eaea3f176461f5dc784796769">]\n\n    head.tree\n    # => #<Grit::Tree "3536eb9abac69c3e4db583ad38f3d30f8db4771f">\n\n    head.author\n    # => #<Grit::Actor "Tom Preston-Werner <tom@mojombo.com>">\n\n    head.authored_date\n    # => Wed Oct 24 22:02:31 -0700 2007\n\n    head.committer\n    # => #<Grit::Actor "Tom Preston-Werner <tom@mojombo.com>">\n\n    head.committed_date\n    # => Wed Oct 24 22:02:31 -0700 2007\n\n    head.message\n    # => "add Actor inspect"\n\nYou can traverse a commit\'s ancestry by chaining calls to `#parents`.\n\n    repo.commits.first.parents[0].parents[0].parents[0]\n\nThe above corresponds to **master^^^** or **master~3** in Git parlance.\n\n\n### The Tree object\n\nA tree records pointers to the contents of a directory. Let\'s say you want\nthe root tree of the latest commit on the **master** branch.\n\n    tree = repo.commits.first.tree\n    # => #<Grit::Tree "3536eb9abac69c3e4db583ad38f3d30f8db4771f">\n\n    tree.id\n    # => "3536eb9abac69c3e4db583ad38f3d30f8db4771f"\n\nOnce you have a tree, you can get the contents.\n\n    contents = tree.contents\n    # => [#<Grit::Blob "4ebc8aea50e0a67e000ba29a30809d0a7b9b2666">,\n          #<Grit::Blob "81d2c27608b352814cbe979a6acd678d30219678">,\n          #<Grit::Tree "c3d07b0083f01a6e1ac969a0f32b8d06f20c62e5">,\n          #<Grit::Tree "4d00fe177a8407dbbc64a24dbfc564762c0922d8">]\n\nThis tree contains two `Blob` objects and two `Tree` objects. The trees are\nsubdirectories and the blobs are files. Trees below the root have additional\nattributes.\n\n    contents.last.name\n    # => "lib"\n\n    contents.last.mode\n    # => "040000"\n\nThere is a convenience method that allows you to get a named sub-object\nfrom a tree.\n\n    tree / "lib"\n    # => #<Grit::Tree "e74893a3d8a25cbb1367cf241cc741bfd503c4b2">\n\nYou can also get a tree directly from the repo if you know its name.\n\n    repo.tree\n    # => #<Grit::Tree "master">\n\n    repo.tree("91169e1f5fa4de2eaea3f176461f5dc784796769")\n    # => #<Grit::Tree "91169e1f5fa4de2eaea3f176461f5dc784796769">\n\n\n### The Blob object\n\nA blob represents a file. Trees often contain blobs.\n\n    blob = tree.contents.first\n    # => #<Grit::Blob "4ebc8aea50e0a67e000ba29a30809d0a7b9b2666">\n\nA blob has certain attributes.\n\n    blob.id\n    # => "4ebc8aea50e0a67e000ba29a30809d0a7b9b2666"\n\n    blob.name\n    # => "README.txt"\n\n    blob.mode\n    # => "100644"\n\n    blob.size\n    # => 7726\n\nYou can get the data of a blob as a string.\n\n    blob.data\n    # => "Grit is a library to ..."\n\nYou can also get a blob directly from the repo if you know its name.\n\n    repo.blob("4ebc8aea50e0a67e000ba29a30809d0a7b9b2666")\n    # => #<Grit::Blob "4ebc8aea50e0a67e000ba29a30809d0a7b9b2666">\n\n\n### Other\n\nThere are many more API methods available that are not documented here. Please\nreference the code for more functionality.\n\n\nCopyright\n---------\n\nCopyright (c) 2010 Tom Preston-Werner. See LICENSE for details.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/mojombo/grit/contents/README.md?ref=master', 'git': 'https://api.github.com/repos/mojombo/grit/git/blobs/a821222a46d3cb4e46bef88a89fa1c3a15da626d', 'html': 'https://github.com/mojombo/grit/blob/master/README.md'}}
****************************************************************************************************
wycats/merb-core
https://api.github.com/repos/wycats/merb-core/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '45d330a82c51115ded44cfdbddd6b79ef331a7f5', 'size': 75, 'url': 'https://api.github.com/repos/wycats/merb-core/contents/README?ref=master', 'html_url': 'https://github.com/wycats/merb-core/blob/master/README', 'git_url': 'https://api.github.com/repos/wycats/merb-core/git/blobs/45d330a82c51115ded44cfdbddd6b79ef331a7f5', 'download_url': 'https://raw.githubusercontent.com/wycats/merb-core/master/README', 'type': 'file', 'content': b'merb-core and merb-more have been merged into http://github.com/wycats/merb', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/wycats/merb-core/contents/README?ref=master', 'git': 'https://api.github.com/repos/wycats/merb-core/git/blobs/45d330a82c51115ded44cfdbddd6b79ef331a7f5', 'html': 'https://github.com/wycats/merb-core/blob/master/README'}}
****************************************************************************************************
rubinius/rubinius
https://api.github.com/repos/rubinius/rubinius/readme?ref=master
{'name': 'README.md', 'path': 'README.md', 'sha': '1fb3540c6e6c00aed189a1dff470a1da5fb26390', 'size': 3297, 'url': 'https://api.github.com/repos/rubinius/rubinius/contents/README.md?ref=master', 'html_url': 'https://github.com/rubinius/rubinius/blob/master/README.md', 'git_url': 'https://api.github.com/repos/rubinius/rubinius/git/blobs/1fb3540c6e6c00aed189a1dff470a1da5fb26390', 'download_url': 'https://raw.githubusercontent.com/rubinius/rubinius/master/README.md', 'type': 'file', 'content': b'[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/rubinius/rubinius?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) [![Build Status](https://travis-ci.org/rubinius/rubinius.svg?branch=master)](https://travis-ci.org/rubinius/rubinius)\n\n## The Rubinius Language Platform\n\nRubinius is a modern language platform that supports a number of programming languages.\n\nRubinius includes a bytecode virtual machine, generational garbage collector, and just-in-time (JIT) native machine code compiler. Rubinius provides concurrency support via native OS threads with no global interpreter lock.\n\nRubinius runs on macOS and many Unix/Linux operating systems. Microsoft Windows is not yet supported.\n\n### Code of Conduct\n\nParticipation in the Rubinius project is governed by the Rubinius [Code of Conduct](https://rubinius.com/code-of-conduct/).\n\n### The Ruby Programming Language\n\nMany popular Ruby applications, like Rails, run on Rubinius, which aims to be compatible with Ruby version 2.3.1.\n\nRubinius includes a Ruby parser, Ruby bytecode compiler, Ruby core library, and C-API compatibility for native C extensions. The Ruby core library is written almost entirely in Ruby. The Ruby bytecode compiler and other tools, such as the debugger, are also written in Ruby.  Rubinius provides the standard Ruby libraries, with the following exceptions:\n\n* Continuation\n* Ripper\n* TracePoint\n* Tracer\n\nThe following Ruby features are not supported on Rubinius:\n\n* Refinements\n* $SAFE levels\n\n### License\n\nAll source code in this repository is subject to the terms of the Mozilla Public License, version 2.0 unless stated otherwise. A copy of this license can be found the file "LICENSE" or at <https://www.mozilla.org/MPL/2.0/>.\n\nContributions made prior to January 3rd, 2016 are licensed under the old BSD 3-clause license. A copy of this license can be found in the file "BSD_LICENSE".\n\nIn the event a directory contains a "LICENSE", "LICENSE.txt" or "COPYING" file the license specified in said file applies to the contents of said directory and all sub directories, overwriting the licenses specified above.\n\n### Installing Rubinius from Source\n\n*Please see https://book.rubinius.com/manuscript/getting_rubinius.html\nfor a more complete guide to installing Rubinius from source.*\n\nTo install Rubinius, use the following steps:\n\n1. Ensure that MRI 2.0+, rubygems, rake, git and LLVM are installed\n2. git clone git://github.com/rubinius/rubinius.git\n3. cd rubinius\n4. ./build.sh --prefix=/path/to/install/dir\n\nWhen the install process finishes, follow the directions printed to the terminal to add the Rubinius executable (bin) directory to your PATH.\n\n### Using RubyGems\n\nRubinius comes with RubyGems built-in. To install a gem, run the following:\n\n    $ rbx -S gem install <gem_name>\n\n### Documentation\n\nThe Rubinius documentation is the [Rubinius book](https://rubinius.com/book/).\n\n### Issues & Support\n\nPlease [file tickets](http://github.com/rubinius/rubinius/issues) for bugs or problems.\n\nFor additional help, visit the [Rubinius Gitter chat room](https://gitter.im/rubinius/rubinius).\n\n### Contributing\n\nThe Rubinius team welcomes contributions. For more information, read the [contributing](https://github.com/rubinius/rubinius/blob/master/.github/contributing.md) file.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/rubinius/rubinius/contents/README.md?ref=master', 'git': 'https://api.github.com/repos/rubinius/rubinius/git/blobs/1fb3540c6e6c00aed189a1dff470a1da5fb26390', 'html': 'https://github.com/rubinius/rubinius/blob/master/README.md'}}
****************************************************************************************************
mojombo/god
https://api.github.com/repos/mojombo/god/readme?ref=master
{'name': 'README.md', 'path': 'README.md', 'sha': '41c0e2231af5843874900c36a1401a06149d392a', 'size': 721, 'url': 'https://api.github.com/repos/mojombo/god/contents/README.md?ref=master', 'html_url': 'https://github.com/mojombo/god/blob/master/README.md', 'git_url': 'https://api.github.com/repos/mojombo/god/git/blobs/41c0e2231af5843874900c36a1401a06149d392a', 'download_url': 'https://raw.githubusercontent.com/mojombo/god/master/README.md', 'type': 'file', 'content': b'God: The Ruby Framework for Process Management\n==============================================\n\n* Authors: Tom Preston-Werner, Kevin Clark, Eric Lindvall\n* Website: http://godrb.com\n\nDescription\n-----------\n\nGod is an easy to configure, easy to extend monitoring framework written in\nRuby.\n\nKeeping your server processes and tasks running should be a simple part of\nyour deployment process. God aims to be the simplest, most powerful monitoring\napplication available.\n\nDocumentation\n-------------\n\nSee in-repo documentation at `REPO_ROOT/doc`.\nSee online documentation at http://godrb.com.\n\nCommunity\n---------\n\nSign up for the god mailing list at http://groups.google.com/group/god-rb\n\nLicense\n-------\n\nSee LICENSE file.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/mojombo/god/contents/README.md?ref=master', 'git': 'https://api.github.com/repos/mojombo/god/git/blobs/41c0e2231af5843874900c36a1401a06149d392a', 'html': 'https://github.com/mojombo/god/blob/master/README.md'}}
****************************************************************************************************
vanpelt/jsawesome
https://api.github.com/repos/vanpelt/jsawesome/readme?ref=master
{'name': 'README.txt', 'path': 'README.txt', 'sha': '174b6dcd8f296910c818cf45f8bbf8b584836ad8', 'size': 754, 'url': 'https://api.github.com/repos/vanpelt/jsawesome/contents/README.txt?ref=master', 'html_url': 'https://github.com/vanpelt/jsawesome/blob/master/README.txt', 'git_url': 'https://api.github.com/repos/vanpelt/jsawesome/git/blobs/174b6dcd8f296910c818cf45f8bbf8b584836ad8', 'download_url': 'https://raw.githubusercontent.com/vanpelt/jsawesome/master/README.txt', 'type': 'file', 'content': b'Jsawesome\n\nDescription:\n    JSAwesome provides a powerful JSON based DSL for creating interactive forms.\n\nExample:\n    new JSAwesome(\'rad\', [[\'cool\',\'neat\'], [\'^neat\',true]], {\'cool\':{label:\'Cool man\', validation:\'cool\'}).to_html()\n    =>\n      <label for="rad_cool">Cool man</label>\n      <input type="text" name="rad_cool" value="neat"/>\n      <label for="rad_neat"><input type="checkbox" name="rad_neat" checked="checked"/> Neat</label>\n    \n    A detailed overview of the library is now available at\n      http://vandev.com/2008/4/22/jsawesome\n      \n    Also see the functional tests for more examples of what is possible\n\nMore information:\n    http://github.com/vanpelt/jsawesome/tree/master\n    \nAuthor:\n    Chris Van Pelt, vanpelt@doloreslabs.com', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/vanpelt/jsawesome/contents/README.txt?ref=master', 'git': 'https://api.github.com/repos/vanpelt/jsawesome/git/blobs/174b6dcd8f296910c818cf45f8bbf8b584836ad8', 'html': 'https://github.com/vanpelt/jsawesome/blob/master/README.txt'}}
****************************************************************************************************
wycats/jspec
https://api.github.com/repos/wycats/jspec/readme?ref=master
{'message': 'Not Found', 'documentation_url': 'https://developer.github.com/v3/repos/contents/#get-the-readme'}
****************************************************************************************************
defunkt/exception_logger
https://api.github.com/repos/defunkt/exception_logger/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '2cb8f623a31376b12b1a1f7e1dce14a73e826f46', 'size': 3195, 'url': 'https://api.github.com/repos/defunkt/exception_logger/contents/README?ref=master', 'html_url': 'https://github.com/defunkt/exception_logger/blob/master/README', 'git_url': 'https://api.github.com/repos/defunkt/exception_logger/git/blobs/2cb8f623a31376b12b1a1f7e1dce14a73e826f46', 'download_url': 'https://raw.githubusercontent.com/defunkt/exception_logger/master/README', 'type': 'file', 'content': b'ExceptionLogger\n===============\n\nThe Exception Logger (forgive the horrible name) logs your Rails exceptions in the database and provides a funky web interface to manage them.\n\nFirst you need to generate the migration:\n\n  ./script/generate exception_migration\n\nNext, you\'ll need to include the ExceptionLoggable module into ApplicationController.  Once that\'s done you might want to modify key methods to customize the logging:\n\n  render_404(exception) - Shows the 404 template.\n  \n  render_500(exception) - Shows the 500 template.\n  \n  log_exception(exception) - Logs the actual exception in the database.\n  \n  rescue_action_in_public(exception) - Does not log these exceptions: ActiveRecord::RecordNotFound, ActionController::UnknownController, ActionController::UnknownAction\n\nNow add a new route to your routes.rb:\n\n  map.connect "logged_exceptions/:action/:id", :controller => "logged_exceptions"\n\nAfter that, visit /logged_exceptions in your application to manage the exceptions.\n\nOnce you have done that, open up the vendor/plugins/init.rb file and choose your pagination,\nsupported options are will_paginate, paginating_find, and simple mysql based pagination (Uses LIMIT)\nThe current default is none. To use the other options you need to uncomment the $PAGINATION_TYPE line\nand the require for that pagination, you should comment out what you won\'t use etc...\n\nIt\'s understandable that you may want to require authentication.  Add this to your config/environments/production.rb:\n\n  # config/environments/production.rb\n  config.after_initialize do\n    require \'application\' unless Object.const_defined?(:ApplicationController)\n    LoggedExceptionsController.class_eval do\n      # set the same session key as the app\n      session :session_key => \'_beast_session_id\'\n      \n      # include any custom auth modules you need\n      include AuthenticationSystem\n      \n      before_filter :login_required\n      \n      # optional, sets the application name for the rss feeds\n      self.application_name = "Beast"\n      \n      protected\n        # only allow admins\n        # this obviously depends on how your auth system works\n        def authorized?\n          current_user.is_a?(Admin)\n        end\n        \n        # assume app\'s login required doesn\'t use http basic\n        def login_required_with_basic\n          respond_to do |accepts|\n            # alias_method_chain will alias the app\'s login_required to login_required_without_basic\n            accepts.html { login_required_without_basic }\n            \n            # access_denied_with_basic_auth is defined in LoggedExceptionsController\n            # get_auth_data returns back the user/password pair\n            accepts.rss do\n              access_denied_with_basic_auth unless self.current_user = User.authenticate(*get_auth_data)\n            end\n          end\n        end\n        \n        alias_method_chain :login_required, :basic\n    end\n  end\n\nThe exact code of course depends on the specific needs of your application.\n\nCREDITS\n\nJamis Buck  - original exception_notification plugin\nRick Olson  - model/controller code\nJosh Goebel - design\nJason Knight - Pagination support, built on/inspired by Ryanb\'s willpaginate support.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/defunkt/exception_logger/contents/README?ref=master', 'git': 'https://api.github.com/repos/defunkt/exception_logger/git/blobs/2cb8f623a31376b12b1a1f7e1dce14a73e826f46', 'html': 'https://github.com/defunkt/exception_logger/blob/master/README'}}
****************************************************************************************************
defunkt/ambition
https://api.github.com/repos/defunkt/ambition/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '920557eefd00733f49169d357f80d33da02d12c1', 'size': 427, 'url': 'https://api.github.com/repos/defunkt/ambition/contents/README?ref=master', 'html_url': 'https://github.com/defunkt/ambition/blob/master/README', 'git_url': 'https://api.github.com/repos/defunkt/ambition/git/blobs/920557eefd00733f49169d357f80d33da02d12c1', 'download_url': 'https://raw.githubusercontent.com/defunkt/ambition/master/README', 'type': 'file', 'content': b'= Ambition\n\n\n== Get it\n\n\n\n$ git clone git://github.com/defunkt/ambition.git\n\n== Resources\n\n * http://ambition.rubyforge.org/\n * http://groups.google.com/group/ambition-rb/\n * http://errtheblog.com/posts/63-full-of-ambition\n * http://errtheblog.com/posts/82-adapting-ambitiously\n * http://errtheblog.com/posts/86-sugary-adapters\n * http://errtheblog.com/posts/64-even-more-ambitious\n\n\n\n== Author\n\nChris Wanstrath\nchris@ozmm.org\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/defunkt/ambition/contents/README?ref=master', 'git': 'https://api.github.com/repos/defunkt/ambition/git/blobs/920557eefd00733f49169d357f80d33da02d12c1', 'html': 'https://github.com/defunkt/ambition/blob/master/README'}}
****************************************************************************************************
technoweenie/restful-authentication
https://api.github.com/repos/technoweenie/restful-authentication/readme?ref=master
{'name': 'README.markdown', 'path': 'README.markdown', 'sha': 'bc2c5170a8737afbdd18dea7e543f526dc722304', 'size': 9814, 'url': 'https://api.github.com/repos/technoweenie/restful-authentication/contents/README.markdown?ref=master', 'html_url': 'https://github.com/technoweenie/restful-authentication/blob/master/README.markdown', 'git_url': 'https://api.github.com/repos/technoweenie/restful-authentication/git/blobs/bc2c5170a8737afbdd18dea7e543f526dc722304', 'download_url': 'https://raw.githubusercontent.com/technoweenie/restful-authentication/master/README.markdown', 'type': 'file', 'content': b'# "Restful Authentication Generator":http://github.com/technoweenie/restful-authentication\n\nThis widely-used plugin provides a foundation for securely managing user\nauthentication:\n* Login / logout\n* Secure password handling\n* Account activation by validating email\n* Account approval / disabling by admin\n* Rudimentary hooks for authorization and access control.\n\nSeveral features were updated in May, 2008.\n* "Stable newer version":http://github.com/technoweenie/restful-authentication/tree/master\n* "\'Classic\' (backward-compatible) version":http://github.com/technoweenie/restful-authentication/tree/classic\n* "Experimental version":http://github.com/technoweenie/restful-authentication/tree/modular (Much more modular, needs testing & review)\n\n> IMPORTANT: if you upgrade your site, existing user account\n> passwords will stop working unless you use --old-passwords\n\n***************************************************************************\n\n## Issue Tracker\n\nPlease submit any bugs or annoyances on the lighthouse tracker at\n* "http://rails_security.lighthouseapp.com/projects/15332-restful_authentication/overview":http://rails_security.lighthouseapp.com/projects/15332-restful_authentication/overview\n\nFor anything simple enough, please github message both maintainers: Rick Olson\n("technoweenie":http://github.com/technoweenie) and Flip Kromer\n("mrflip":http://github.com/mrflip).\n\n***************************************************************************\n\n## Documentation\n\nThis page has notes on\n* "Installation":#INSTALL\n* "New Features":#AWESOME\n* "After installing":#POST-INSTALL\n\nSee the "wiki":http://github.com/technoweenie/restful-authentication/wikis/home\n(or the notes/ directory) if you want to learn more about:\n\n* "Extensions, Addons and Alternatives":addons such as HAML templates\n* "Security Design Patterns":security-patterns with "snazzy diagram":http://github.com/technoweenie/restful-authentication/tree/master/notes/SecurityFramework.png\n* Authentication -- Lets a visitor identify herself (and lay  claim to her corresponding Roles and measure of Trust)\n* "Trust Metrics":Trustification -- Confidence we can rely on the outcomes of this visitor\'s actions.\n* Authorization and Policy -- Based on trust and identity, what actions may this visitor perform?\n* Access Control -- How the Authorization policy is actually enforced in your code (A: hopefully without turning it into  a spaghetti of if thens)\n* Rails Plugins for Authentication, Trust,  Authorization and Access Control\n* Tradeoffs -- for the paranoid or the curious, a rundown of tradeoffs made in the code\n* CHANGELOG -- Summary of changes to internals\n* TODO -- Ideas for how you can help\n\nThese best version of the release notes are in the notes/ directory in the\n"source code":http://github.com/technoweenie/restful-authentication/tree/master\n-- look there for the latest version.  The wiki versions are taken (manually)\nfrom there.\n\n***************************************************************************\n\n<a id="AWESOME"/> </a>\n\n## Exciting new features\n\n### Stories\n\nThere are now "Cucumber":http://wiki.github.com/aslakhellesoy/cucumber/home features that allow expressive, enjoyable tests for the\nauthentication code. The flexible code for resource testing in stories was\nextended from "Ben Mabey\'s.":http://www.benmabey.com/2008/02/04/rspec-plain-text-stories-webrat-chunky-bacon/\n\n### Modularize to match security design patterns:\n\n* Authentication (currently: password, browser cookie token, HTTP basic)\n* Trust metric (email validation)\n* Authorization (stateful roles)\n* Leave a flexible framework that will play nicely with other access control / policy definition / trust metric plugins\n\n### Other\n\n* Added a few helper methods for linking to user pages\n* Uniform handling of logout, remember_token\n* Stricter email, login field validation\n* Minor security fixes -- see CHANGELOG\n\n***************************************************************************\n\n## Non-backwards compatible Changes\n\nHere are a few changes in the May 2008 release that increase "Defense in Depth"\nbut may require changes to existing accounts\n\n* If you have an existing site, none of these changes are compelling enough to\n  warrant migrating your userbase.\n* If you are generating for a new site, all of these changes are low-impact.\n  You should apply them.\n\n### Passwords\n\nThe new password encryption (using a site key salt and stretching) will break\nexisting user accounts\' passwords.  We recommend you use the --old-passwords\noption or write a migration tool and submit it as a patch.  See the\n[[Tradeoffs]] note for more information.\n\n### Validations\n\nBy default, email and usernames are validated against a somewhat strict pattern; your users\' values may be now illegal.  Adjust to suit.\n\n***************************************************************************\n\n<a id="INSTALLATION"/> </a>\n\n## Installation\n\nThis is a basic restful authentication generator for rails, taken from\nacts as authenticated.  Currently it requires Rails 1.2.6 or above.\n\n**IMPORTANT FOR RAILS > 2.1 USERS** To avoid a @NameError@ exception ("lighthouse tracker ticket":http://rails_security.lighthouseapp.com/projects/15332-restful_authentication/tickets/2-not-a-valid-constant-name-errors#ticket-2-2), check out the code to have an _underscore_ and not _dash_ in its name:\n* either use <code>git clone git://github.com/technoweenie/restful-authentication.git restful_authentication</code>\n* or rename the plugin\'s directory to be <code>restful_authentication</code> after fetching it.\n\nTo use the generator:\n\n  ./script/generate authenticated user sessions \\\n    --include-activation \\\n    --stateful \\\n    --rspec \\\n    --skip-migration \\\n    --skip-routes \\\n    --old-passwords\n\n* The first parameter specifies the model that gets created in signup (typically\n  a user or account model).  A model with migration is created, as well as a\n  basic controller with the create method. You probably want to say "User" here.\n\n* The second parameter specifies the session controller name.  This is the\n  controller that handles the actual login/logout function on the site.\n  (probably: "Session").\n\n* --include-activation: Generates the code for a ActionMailer and its respective\n  Activation Code through email.\n\n* --stateful: Builds in support for acts_as_state_machine and generates\n  activation code.  (@--stateful@ implies @--include-activation@). Based on the\n  idea at [[http://www.vaporbase.com/postings/stateful_authentication]]. Passing\n  @--skip-migration@ will skip the user migration, and @--skip-routes@ will skip\n  resource generation -- both useful if you\'ve already run this generator.\n  (Needs the "acts_as_state_machine plugin":http://elitists.textdriven.com/svn/plugins/acts_as_state_machine/,\n  but new installs should probably run with @--aasm@ instead.)\n\n* --aasm: Works the same as stateful but uses the "updated aasm gem":http://github.com/rubyist/aasm/tree/master\n\n* --rspec: Generate RSpec tests and Stories in place of standard rails tests.\n  This requires the\n    "RSpec and Rspec-on-rails plugins":http://rspec.info/\n  (make sure you "./script/generate rspec" after installing RSpec.)  The rspec\n  and story suite are much more thorough than the rails tests, and changes are\n  unlikely to be backported.\n\n* --old-passwords: Use the older password scheme (see [[#COMPATIBILITY]], above)\n\n* --skip-migration: Don\'t generate a migration file for this model\n\n* --skip-routes: Don\'t generate a resource line in @config/routes.rb@\n\n***************************************************************************\n<a id="POST-INSTALL"/> </a>\n\n## After installing\n\nThe below assumes a Model named \'User\' and a Controller named \'Session\'; please\nalter to suit. There are additional security minutae in @notes/README-Tradeoffs@\n-- only the paranoid or the curious need bother, though.\n\n* Add these familiar login URLs to your @config/routes.rb@ if you like:\n\n    <pre><code>\n    map.signup  \'/signup\', :controller => \'users\',   :action => \'new\'\n    map.login  \'/login\',  :controller => \'session\', :action => \'new\'\n    map.logout \'/logout\', :controller => \'session\', :action => \'destroy\'\n    </code></pre>\n\n* With @--include-activation@, also add to your @config/routes.rb@:\n\n    <pre><code>\n    map.activate \'/activate/:activation_code\', :controller => \'users\', :action => \'activate\', :activation_code => nil\n    </code></pre>\n\n  and add an observer to @config/environment.rb@:\n\n    <pre><code>\n    config.active_record.observers = :user_observer\n    </code></pre>\n\n  Pay attention, may be this is not an issue for everybody, but if you should\n  have problems, that the sent activation_code does match with that in the\n  database stored, reload your user object before sending its data through email\n  something like:\n\n    <pre><code>\n    class UserObserver < ActiveRecord::Observer\n      def after_create(user)\n        user.reload\n        UserMailer.deliver_signup_notification(user)\n      end\n      def after_save(user)\n        user.reload\n        UserMailer.deliver_activation(user) if user.recently_activated?\n      end\n    end\n    </code></pre>\n\n\n* With @--stateful@, add an observer to config/environment.rb:\n\n    <pre><code>\n    config.active_record.observers = :user_observer\n    </code></pre>\n\n  and modify the users resource line to read\n\n    map.resources :users, :member => { :suspend   => :put,\n                                       :unsuspend => :put,\n                                       :purge     => :delete }\n\n* If you use a public repository for your code (such as github, rubyforge,\n  gitorious, etc.) make sure to NOT post your site_keys.rb (add a line like\n  \'/config/initializers/site_keys.rb\' to your .gitignore or do the svn ignore\n  dance), but make sure you DO keep it backed up somewhere safe.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/technoweenie/restful-authentication/contents/README.markdown?ref=master', 'git': 'https://api.github.com/repos/technoweenie/restful-authentication/git/blobs/bc2c5170a8737afbdd18dea7e543f526dc722304', 'html': 'https://github.com/technoweenie/restful-authentication/blob/master/README.markdown'}}
****************************************************************************************************
technoweenie/attachment_fu
https://api.github.com/repos/technoweenie/attachment_fu/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'baa78c20267917cedcf9c3152d6c172aa2113b90', 'size': 9889, 'url': 'https://api.github.com/repos/technoweenie/attachment_fu/contents/README?ref=master', 'html_url': 'https://github.com/technoweenie/attachment_fu/blob/master/README', 'git_url': 'https://api.github.com/repos/technoweenie/attachment_fu/git/blobs/baa78c20267917cedcf9c3152d6c172aa2113b90', 'download_url': 'https://raw.githubusercontent.com/technoweenie/attachment_fu/master/README', 'type': 'file', 'content': b'attachment-fu\n=============\n\nattachment_fu is a plugin by Rick Olson (aka technoweenie <http://techno-weenie.net>) and is the successor to acts_as_attachment.  To get a basic run-through of its capabilities, check out Mike Clark\'s tutorial <http://clarkware.com/cgi/blosxom/2007/02/24#FileUploadFu>.\n\n\nattachment_fu functionality\n===========================\n\nattachment_fu facilitates file uploads in Ruby on Rails.  There are a few storage options for the actual file data, but the plugin always at a minimum stores metadata for each file in the database.\n\nThere are four storage options for files uploaded through attachment_fu:\n  File system\n  Database file\n  Amazon S3\n  Rackspace (Mosso) Cloud Files\n\nEach method of storage many options associated with it that will be covered in the following section.  Something to note, however, is that the Amazon S3 storage requires you to modify config/amazon_s3.yml, the Rackspace Cloud Files storage requires you to modify config/rackspace_cloudfiles.yml, and the Database file storage requires an extra table.\n\n\nattachment_fu models\n====================\n\nFor all three of these storage options a table of metadata is required.  This table will contain information about the file (hence the \'meta\') and its location.  This table has no restrictions on naming, unlike the extra table required for database storage, which must have a table name of db_files (and by convention a model of DbFile).\n  \nIn the model there are two methods made available by this plugins: has_attachment and validates_as_attachment.\n\nhas_attachment(options = {})\n  This method accepts the options in a hash:\n    :content_type     # Allowed content types.\n                      # Allows all by default.  Use :image to allow all standard image types.\n    :min_size         # Minimum size allowed.\n                      # 1 byte is the default.\n    :max_size         # Maximum size allowed.\n                      # 1.megabyte is the default.\n    :size             # Range of sizes allowed.\n                      # (1..1.megabyte) is the default.  This overrides the :min_size and :max_size options.\n    :resize_to        # Used by RMagick to resize images.\n                      # Pass either an array of width/height, or a geometry string.\n    :thumbnails       # Specifies a set of thumbnails to generate.\n                      # This accepts a hash of filename suffixes and RMagick resizing options.\n                      # This option need only be included if you want thumbnailing.\n    :thumbnail_class  # Set which model class to use for thumbnails.\n                      # This current attachment class is used by default.\n    :path_prefix      # Path to store the uploaded files in.\n                      # Uses public/#{table_name} by default for the filesystem, and just #{table_name} for the S3 and Cloud Files backend.  \n                      # Setting this sets the :storage to :file_system.\n    :partition        # Whether to partiton files in directories like /0000/0001/image.jpg. Default is true. Only applicable to the :file_system backend.\n    :storage          # Specifies the storage system to use..\n                      # Defaults to :db_file.  Options are :file_system, :db_file, :s3, and :cloud_files.\n    :cloudfront       # If using S3 for storage, this option allows for serving the files via Amazon CloudFront.\n                      # Defaults to false.\n    :processor        # Sets the image processor to use for resizing of the attached image.\n                      # Options include ImageScience, Rmagick, and MiniMagick.  Default is whatever is installed.\n    :uuid_primary_key # If your model\'s primary key is a 128-bit UUID in hexadecimal format, then set this to true.\n    :association_options  # attachment_fu automatically defines associations with thumbnails with has_many and belongs_to. If there are any additional options that you want to pass to these methods, then specify them here.\n    \n\n  Examples:\n    has_attachment :max_size => 1.kilobyte\n    has_attachment :size => 1.megabyte..2.megabytes\n    has_attachment :content_type => \'application/pdf\'\n    has_attachment :content_type => [\'application/pdf\', \'application/msword\', \'text/plain\']\n    has_attachment :content_type => :image, :resize_to => [50,50]\n    has_attachment :content_type => [\'application/pdf\', :image], :resize_to => \'x50\'\n    has_attachment :thumbnails => { :thumb => [50, 50], :geometry => \'x50\' }\n    has_attachment :storage => :file_system, :path_prefix => \'public/files\'\n    has_attachment :storage => :file_system, :path_prefix => \'public/files\', \n                   :content_type => :image, :resize_to => [50,50], :partition => false\n    has_attachment :storage => :file_system, :path_prefix => \'public/files\',\n                   :thumbnails => { :thumb => [50, 50], :geometry => \'x50\' }\n    has_attachment :storage => :s3\n    has_attachment :store => :s3, :cloudfront => true\n    has_attachment :storage => :cloud_files\n\nvalidates_as_attachment\n  This method prevents files outside of the valid range (:min_size to :max_size, or the :size range) from being saved.  It does not however, halt the upload of such files.  They will be uploaded into memory regardless of size before validation.\n  \n  Example:\n    validates_as_attachment\n\n\nattachment_fu migrations\n========================\n\nFields for attachment_fu metadata tables...\n  in general:\n    size,         :integer  # file size in bytes\n    content_type, :string   # mime type, ex: application/mp3\n    filename,     :string   # sanitized filename\n  that reference images:\n    height,       :integer  # in pixels\n    width,        :integer  # in pixels\n  that reference images that will be thumbnailed:\n    parent_id,    :integer  # id of parent image (on the same table, a self-referencing foreign-key).\n                            # Only populated if the current object is a thumbnail.\n    thumbnail,    :string   # the \'type\' of thumbnail this attachment record describes.  \n                            # Only populated if the current object is a thumbnail.\n                            # Usage:\n                            # [ In Model \'Avatar\' ]\n                            #   has_attachment :content_type => :image, \n                            #                  :storage => :file_system, \n                            #                  :max_size => 500.kilobytes,\n                            #                  :resize_to => \'320x200>\',\n                            #                  :thumbnails => { :small => \'10x10>\',\n                            #                                   :thumb => \'100x100>\' }\n                            # [ Elsewhere ]\n                            # @user.avatar.thumbnails.first.thumbnail #=> \'small\'\n  that reference files stored in the database (:db_file):\n    db_file_id,   :integer  # id of the file in the database (foreign key)\n    \nField for attachment_fu db_files table:\n  data, :binary # binary file data, for use in database file storage\n\n\nattachment_fu views\n===================\n\nThere are two main views tasks that will be directly affected by attachment_fu: upload forms and displaying uploaded images.\n\nThere are two parts of the upload form that differ from typical usage.\n  1. Include \':multipart => true\' in the html options of the form_for tag.\n    Example:\n      <% form_for(:attachment_metadata, :url => { :action => "create" }, :html => { :multipart => true }) do |form| %>\n      \n  2. Use the file_field helper with :uploaded_data as the field name.\n    Example:\n      <%= form.file_field :uploaded_data %>\n\nDisplaying uploaded images is made easy by the public_filename method of the ActiveRecord attachment objects using file system, s3, and Cloud Files storage.\n\npublic_filename(thumbnail = nil)\n  Returns the public path to the file.  If a thumbnail prefix is specified it will return the public file path to the corresponding thumbnail.\n  Examples:\n    attachment_obj.public_filename          #=> /attachments/2/file.jpg\n    attachment_obj.public_filename(:thumb)  #=> /attachments/2/file_thumb.jpg\n    attachment_obj.public_filename(:small)  #=> /attachments/2/file_small.jpg\n\nWhen serving files from database storage, doing more than simply downloading the file is beyond the scope of this document.\n\n\nattachment_fu controllers\n=========================\n\nThere are two considerations to take into account when using attachment_fu in controllers.\n\nThe first is when the files have no publicly accessible path and need to be downloaded through an action.\n\nExample:\n  def readme\n    send_file \'/path/to/readme.txt\', :type => \'plain/text\', :disposition => \'inline\'\n  end\n  \nSee the possible values for send_file for reference.\n\n\nThe second is when saving the file when submitted from a form.\nExample in view:\n <%= form.file_field :attachable, :uploaded_data %>\n\nExample in controller:\n  def create\n    @attachable_file = AttachmentMetadataModel.new(params[:attachable])\n    if @attachable_file.save\n      flash[:notice] = \'Attachment was successfully created.\'\n      redirect_to attachable_url(@attachable_file)     \n    else\n      render :action => :new\n    end\n  end\n\nattachement_fu scripting\n====================================\n\nYou may wish to import a large number of images or attachments. \nThe following example shows how to upload a file from a script. \n\n#!/usr/bin/env ./script/runner\n\n# required to use ActionController::TestUploadedFile \nrequire \'action_controller\'\nrequire \'action_controller/test_process.rb\'\n\npath = "./public/images/x.jpg"\n\n# mimetype is a string like "image/jpeg". One way to get the mimetype for a given file on a UNIX system\n# mimetype = `file -ib #{path}`.gsub(/\\n/,"")\n\nmimetype = "image/jpeg"\n\n# This will "upload" the file at path and create the new model.\n@attachable = AttachmentMetadataModel.new(:uploaded_data => ActionController::TestUploadedFile.new(path, mimetype))\n@attachable.save\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/technoweenie/attachment_fu/contents/README?ref=master', 'git': 'https://api.github.com/repos/technoweenie/attachment_fu/git/blobs/baa78c20267917cedcf9c3152d6c172aa2113b90', 'html': 'https://github.com/technoweenie/attachment_fu/blob/master/README'}}
****************************************************************************************************
caged/microsis
https://api.github.com/repos/caged/microsis/readme?ref=master
{'message': 'Not Found', 'documentation_url': 'https://developer.github.com/v3/repos/contents/#get-the-readme'}
****************************************************************************************************
anotherjesse/s3
https://api.github.com/repos/anotherjesse/s3/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'f26b563a449a206175aeab61cb2091ef09ca60e5', 'size': 1417, 'url': 'https://api.github.com/repos/anotherjesse/s3/contents/README?ref=master', 'html_url': 'https://github.com/anotherjesse/s3/blob/master/README', 'git_url': 'https://api.github.com/repos/anotherjesse/s3/git/blobs/f26b563a449a206175aeab61cb2091ef09ca60e5', 'download_url': 'https://raw.githubusercontent.com/anotherjesse/s3/master/README', 'type': 'file', 'content': b'S3:// is a "psuedo protocol" for Amazon\'s S3 service.\n\nInteract with S3 in the same way you do with HTTP, through your URL bar.\n\n* TODO:\n\n** 0.1 release [1/4]\n  - [ ] fix copyright/contributors info\n  - [ ] s3 logo\n  - [ ] help/about section\n  - [X] allow mixed case bucket names s3://\n\n* BUGS/IDEAS:\n\n** s3://twitter_production/profile_background_images/1001042/ -- cannot click the contained thing\n** s3://twitter_production/profile_background_images/ -- css breaks (the background stops) about 2/3 down\n** s3://what/ -- acts weird\n** setup credentials only works once due to blockUI\n\nFUTURE/IDEAS:\n\n** right click -> "Save As" is broken\n** exception/feedback tool\n** setting ACL for a bucket\n** recursive deletion of a folder\n** setting ACL on a key\n** have a progress meter for uploads\n** Tools -> Page Info should have accurate information (s3 specific?)\n** cache the key listing info at the channel layer\n** support logging\n** right click handler for copy url/torrent\n** create time limited url for key\n** support renaming/copying keys\n** deal with undetected mime-types (ask user?)\n** linkify key directories/paths (ala initial designs for awesome bar)\n** a good date format on key list\n** support adding people to buckets via email addresses\n** specify if bucket should be created in US or Europe\n** transfer over SSL?\n** Handle uploading of folders via DND\n** emulate "create folder" system that others use?\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/anotherjesse/s3/contents/README?ref=master', 'git': 'https://api.github.com/repos/anotherjesse/s3/git/blobs/f26b563a449a206175aeab61cb2091ef09ca60e5', 'html': 'https://github.com/anotherjesse/s3/blob/master/README'}}
****************************************************************************************************
anotherjesse/taboo
https://api.github.com/repos/anotherjesse/taboo/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '51069bef9a1210e72bdaeeccec404e15c9deb4f4', 'size': 614, 'url': 'https://api.github.com/repos/anotherjesse/taboo/contents/README?ref=master', 'html_url': 'https://github.com/anotherjesse/taboo/blob/master/README', 'git_url': 'https://api.github.com/repos/anotherjesse/taboo/git/blobs/51069bef9a1210e72bdaeeccec404e15c9deb4f4', 'download_url': 'https://raw.githubusercontent.com/anotherjesse/taboo/master/README', 'type': 'file', 'content': b"* Before release 0.20 [0/8]\n  - [ ] null titles break taboo\n  - [ ] make sure re-clicking the taboo button doesn't overwrite data?\n  - [ ] inplace editor doesn't handle escape key correctly:\n    click to edit, save changes, then click escape again to change\n  - [ ] inplace editor breaks if you change textarea while it is in edit mode\n  - [ ] deleting from grid mode doesn't show the undelete box\n  - [ ] undelete / delete all isn't show correctly on trash.js\n  - [ ] use humanized messages on deletion/undelete?\n  - [ ] use favicons on dropdown menu?\n  - [ ] tooltips on grid.js?\n  - [ ] tooltips on calendar.js\n", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/anotherjesse/taboo/contents/README?ref=master', 'git': 'https://api.github.com/repos/anotherjesse/taboo/git/blobs/51069bef9a1210e72bdaeeccec404e15c9deb4f4', 'html': 'https://github.com/anotherjesse/taboo/blob/master/README'}}
****************************************************************************************************
anotherjesse/foxtracs
https://api.github.com/repos/anotherjesse/foxtracs/readme?ref=master
{'message': 'Not Found', 'documentation_url': 'https://developer.github.com/v3/repos/contents/#get-the-readme'}
****************************************************************************************************
anotherjesse/fotomatic
https://api.github.com/repos/anotherjesse/fotomatic/readme?ref=master
{'message': 'Not Found', 'documentation_url': 'https://developer.github.com/v3/repos/contents/#get-the-readme'}
****************************************************************************************************
mojombo/glowstick
https://api.github.com/repos/mojombo/glowstick/readme?ref=master
{'name': 'README.txt', 'path': 'README.txt', 'sha': 'ffce7a3beb2a0b75fc75769cd8b802a556decd28', 'size': 1384, 'url': 'https://api.github.com/repos/mojombo/glowstick/contents/README.txt?ref=master', 'html_url': 'https://github.com/mojombo/glowstick/blob/master/README.txt', 'git_url': 'https://api.github.com/repos/mojombo/glowstick/git/blobs/ffce7a3beb2a0b75fc75769cd8b802a556decd28', 'download_url': 'https://raw.githubusercontent.com/mojombo/glowstick/master/README.txt', 'type': 'file', 'content': b"glowstick\n    by FIX (your name)\n    FIX (url)\n\n== DESCRIPTION:\n  \nFIX (describe your package)\n\n== FEATURES/PROBLEMS:\n  \n* FIX (list of features or problems)\n\n== SYNOPSIS:\n\n  FIX (code sample of usage)\n\n== REQUIREMENTS:\n\n* FIX (list of requirements)\n\n== INSTALL:\n\n* FIX (sudo gem install, anything else)\n\n== LICENSE:\n\n(The MIT License)\n\nCopyright (c) 2008 FIX\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/mojombo/glowstick/contents/README.txt?ref=master', 'git': 'https://api.github.com/repos/mojombo/glowstick/git/blobs/ffce7a3beb2a0b75fc75769cd8b802a556decd28', 'html': 'https://github.com/mojombo/glowstick/blob/master/README.txt'}}
****************************************************************************************************
defunkt/starling
https://api.github.com/repos/defunkt/starling/readme?ref=master
{'name': 'README.rdoc', 'path': 'README.rdoc', 'sha': '72c750cdaec30d7813995f7c49307fd69bd6523e', 'size': 2914, 'url': 'https://api.github.com/repos/defunkt/starling/contents/README.rdoc?ref=master', 'html_url': 'https://github.com/defunkt/starling/blob/master/README.rdoc', 'git_url': 'https://api.github.com/repos/defunkt/starling/git/blobs/72c750cdaec30d7813995f7c49307fd69bd6523e', 'download_url': 'https://raw.githubusercontent.com/defunkt/starling/master/README.rdoc', 'type': 'file', 'content': b'= Name\n\nStarling - a light weight server for reliable distributed message passing.\n\n= Description\n\nStarling is a powerful but simple messaging server that enables reliable\ndistributed queuing with an absolutely minimal overhead. It speaks the\nMemCache protocol for maximum cross-platform compatibility. Any language\nthat speaks MemCache can take advantage of Starling\'s queue facilities.\n\n= Installation\n\n  This fork of the Starling source is hosted at GitHub and can be found at:\n\n  http://github.com/starling/starling/tree/master\n\n  The original source was to be found at RubyForge but no longer exists there.\n\n  GitHub serves gems prefixed by a username to differentiate different forks.\n  This project can be installed with:\n\n  # THIS COMMAND ONE TIME ONLY\n  gem sources -a http://gems.github.com/\n\n  # As often as you like\n  sudo gem install starling-starling\n\n  See http://gems.github.com/ if you want more info about GitHub and gems.\n\n= Quick Start Usage\n\n  # View the Starling help and usage message\n  starling --help\n\n  # In a console window start the Starling server.  By default\n  # it runs verbosely in the foreground, listening on 127.0.0.1:22122\n  # and stores its files under /tmp/starling:\n  starling\n\n  # In a new console test the put and get of messages on a queue:\n\n  irb\n  >> require \'starling\'\n  => true\n  >> starling = Starling.new(\'127.0.0.1:22122\')\n  => MemCache: 1 servers, 1 buckets, ns: nil, ro: false\n  >> starling.set(\'my_queue\', 12345)\n  => nil\n  >> starling.get(\'my_queue\')\n  => 12345\n\n  # You can do a simple loop over a queue with something like:\n  >> loop { puts starling.get(\'my_queue\'); sleep 1 }\n  12345\n  nil\n  nil\n  ...\n\n  For more information run the following in a new console:\n  \n  \'gem server\'\n\n  This will start a gem server on http://localhost:8808/ which you can view in your\n  browser to see the RDocs for the gem. Or generate rdocs by running the following\n  in a new console:\n\t\n  \'rdoc\'\n\n= Using fiveruns memcache-client\n\n\tmemcache-client from fiveruns has a couple of fixed added like supporting failover and retry on failure.\n\t\n\tThis fork of the memcache-client source is hosted at GitHub and can be found at:\n\n\thttp://github.com/fiveruns/memcache-client/tree/master\n\n\tIt can be installed using:\n\n\t# THIS COMMAND ONE TIME ONLY\n\tgem sources -a http://gems.github.com/\n\n\t# As often as you like\n\tsudo gem install fiveruns-memcache-client\n\n= Known Issues\n\n* Starling is "slow" as far as messaging systems are concerned. In practice,\n  it\'s fast enough.\n\n== TODO\n\n* Implement memcached instead of memcache as a client interface (to make it faster)\n\n= Authors\n\n* Blaine Cook <romeda@gmail.com>\n* Chris Wanstrath <chris@ozmm.org>\n* AnotherBritt <?>\n* Glenn Rempe <?>\n* Abdul-Rahman Advany <abdulrahman@advany.com>\n\n= Copyright\n\nStarling - a light-weight server for reliable distributed message passing.\nCopyright 2007-2008 Blaine Cook <blaine@twitter.com>, Twitter Inc.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/defunkt/starling/contents/README.rdoc?ref=master', 'git': 'https://api.github.com/repos/defunkt/starling/git/blobs/72c750cdaec30d7813995f7c49307fd69bd6523e', 'html': 'https://github.com/defunkt/starling/blob/master/README.rdoc'}}
****************************************************************************************************
wycats/merb-more
https://api.github.com/repos/wycats/merb-more/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '45d330a82c51115ded44cfdbddd6b79ef331a7f5', 'size': 75, 'url': 'https://api.github.com/repos/wycats/merb-more/contents/README?ref=master', 'html_url': 'https://github.com/wycats/merb-more/blob/master/README', 'git_url': 'https://api.github.com/repos/wycats/merb-more/git/blobs/45d330a82c51115ded44cfdbddd6b79ef331a7f5', 'download_url': 'https://raw.githubusercontent.com/wycats/merb-more/master/README', 'type': 'file', 'content': b'merb-core and merb-more have been merged into http://github.com/wycats/merb', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/wycats/merb-more/contents/README?ref=master', 'git': 'https://api.github.com/repos/wycats/merb-more/git/blobs/45d330a82c51115ded44cfdbddd6b79ef331a7f5', 'html': 'https://github.com/wycats/merb-more/blob/master/README'}}
****************************************************************************************************
macournoyer/thin
https://api.github.com/repos/macournoyer/thin/readme?ref=master
{'name': 'README.md', 'path': 'README.md', 'sha': 'd5c2acdf4fdd3adbf6c180be01063d43f4947e61', 'size': 2058, 'url': 'https://api.github.com/repos/macournoyer/thin/contents/README.md?ref=master', 'html_url': 'https://github.com/macournoyer/thin/blob/master/README.md', 'git_url': 'https://api.github.com/repos/macournoyer/thin/git/blobs/d5c2acdf4fdd3adbf6c180be01063d43f4947e61', 'download_url': 'https://raw.githubusercontent.com/macournoyer/thin/master/README.md', 'type': 'file', 'content': b"# Thin\n\nA small and fast Ruby web server\n\n## Installation\n\n```\ngem install thin\n```\n\nOr add `thin` to your `Gemfile`:\n\n```ruby\ngem 'thin'\n```\n\n## Usage\n\nA +thin+ script offers an easy way to start your Rack application:\n\n```\nthin start\n```\n\nBrowse the `example` directory for sample applications.\n\n## Usage with Rails Action Cable\n\nTo use Thin with Action Cable, add the following to your `Gemfile`:\n\n```ruby\ngem 'faye-websocket'\ngem 'thin' # If not already done\n```\n\nCreate a `config/initializers/thin_action_cable.rb`:\n\n```ruby\nRails.application.config.action_cable.use_faye = true\nFaye::WebSocket.load_adapter 'thin'\n```\n\n### CLI\n\nUse a rackup (config.ru) file and bind to localhost port 8080:\n\n```\nthin -R config.ru -a 127.0.0.1 -p 8080 start\n```\n\nStore the server process ID, log to a file and daemonize:\n\n```\nthin -p 9292 -P tmp/pids/thin.pid -l logs/thin.log -d start\n```\n\nThin is quite flexible in that many options can be specified at the command line (see `thin -h` for more).\n\n### Configuration files\n\nYou can create a configuration file using `thin config -C config/thin.yml`.\n\nYou can then use it with all commands, such as: `thin start -C config/thin.yml`.\n\nHere is an example config file:\n\n```yaml\n--- \nuser: www-data\ngroup: www-data\npid: tmp/pids/thin.pid\ntimeout: 30\nwait: 30\nlog: log/thin.log\nmax_conns: 1024\nrequire: []\nenvironment: production\nmax_persistent_conns: 512\nservers: 1\nthreaded: true\nno-epoll: true\ndaemonize: true\nsocket: tmp/sockets/thin.sock\nchdir: /path/to/your/apps/root\ntag: a-name-to-show-up-in-ps aux\n```\n\n## License\n\nRuby License, http://www.ruby-lang.org/en/LICENSE.txt.\n\n## Credits\n\nThe parser was originally from Mongrel http://mongrel.rubyforge.org by Zed Shaw.\nMongrel is copyright 2007 Zed A. Shaw and contributors. It is licensed under\nthe Ruby license and the GPL2.\n\nThin is copyright Marc-Andre Cournoyer <macournoyer@gmail.com>\n\nGet help at http://groups.google.com/group/thin-ruby/\nReport bugs at https://github.com/macournoyer/thin/issues\nand major security issues directly to me at macournoyer@gmail.com.\n", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/macournoyer/thin/contents/README.md?ref=master', 'git': 'https://api.github.com/repos/macournoyer/thin/git/blobs/d5c2acdf4fdd3adbf6c180be01063d43f4947e61', 'html': 'https://github.com/macournoyer/thin/blob/master/README.md'}}
****************************************************************************************************
jamesgolick/resource_controller
https://api.github.com/repos/jamesgolick/resource_controller/readme?ref=master
{'name': 'README.rdoc', 'path': 'README.rdoc', 'sha': '61a19693d36fc2879af8c726c0003dda32577d3a', 'size': 10692, 'url': 'https://api.github.com/repos/jamesgolick/resource_controller/contents/README.rdoc?ref=master', 'html_url': 'https://github.com/jamesgolick/resource_controller/blob/master/README.rdoc', 'git_url': 'https://api.github.com/repos/jamesgolick/resource_controller/git/blobs/61a19693d36fc2879af8c726c0003dda32577d3a', 'download_url': 'https://raw.githubusercontent.com/jamesgolick/resource_controller/master/README.rdoc', 'type': 'file', 'content': b'= Resource Controller\n\nresource_controller makes RESTful controllers easier, more maintainable, and super readable.  With the RESTful controller pattern hidden away, you can focus on what makes your controller special.\n\n== Get It\n\nInstall it as a plugin:\n\n  script/plugin install git://github.com/giraffesoft/resource_controller.git\n  \nOr grab the source\n  \n  git clone git://github.com/giraffesoft/resource_controller.git\n\n= Usage\n\nCreating a basic RESTful controller is as easy as...\n\n  class PostsController < ResourceController::Base\n  end\n  \n...or if you prefer, you can use the method-call syntax.  If you need to inherit from some other class, this syntax is definitely for you:\n\n  class PostsController < ApplicationController\n    resource_controller\n  end\n\nBoth syntaxes are identical in their behavior.  Just make sure you call resource_controller before you use any other r_c functionality in your controller.\n  \n  \nNobody just uses the default RESTful controller, though.  resource_controller provides a simple API for customizations.\n\n== Action Lifecycle\n\nIt\'s really easy to make changes to the lifecycle of your actions.\n\n  Note: We had to call the new accessor "new_action", since new is somewhat reserved in ruby.\n\n=== Before and After\n\n  class ProjectsController < ResourceController::Base\n    \n    new_action.before do\n      3.times { object.tasks.build }\n    end\n    \n    create.after do\n      object.creator = current_user\n    end\n    \n  end\n  \n=== Flash\n\n  class ProjectsController < ResourceController::Base\n    create.flash "Can you believe how easy it is to use resource_controller?  Neither could I!"\n  end\n\n=== respond_to\n\nYou can add to what\'s already there...\n  \n  class ProjectsController < ResourceController::Base      \n    create.wants.js { render :template => "show.rjs" }\n  end\n  \nOr you can create a whole new block.  This syntax destroys everything that\'s there, and starts again...\n\n  class ProjectsController < ResourceController::Base      \n    create.response do |wants|\n      wants.html\n      wants.js { render :template => "show.rjs" }\n    end\n  end\n\nIf you have a nested resource and want to redirect to the parent after create/update and destroy you can do this in the object controller\n\n class CommentsController < ResourceController::Base\n    belongs_to :post\n    \n    create.wants.html { redirect_to smart_url(parent_url_options) } \n    update.wants.html { redirect_to smart_url(parent_url_options) } \n    destroy.wants.html { redirect_to smart_url(parent_url_options) }\n  end\n  \n=== Scoping\n\nBecause sometimes you want to make a bunch of customizations at once, most of the helpers accept blocks that make grouping calls really easy.  Is it a DSL?  Maybe; maybe not.  But, it\'s definitely awesome.\n\nWith actions that can fail, the scoping defaults to success.  That means that create.flash == create.success.flash.\n\n  class ProjectsController < ResourceController::Base\n    \n    create do\n      flash "Object successfully created!"\n      wants.js { render :template => "show.rjs" }\n      \n      failure.wants.js { render :template => "display_errors.rjs" }\n    end\n    \n    destroy do\n      flash "You destroyed your project.  Good work."\n      \n      failure do\n        flash "You cannot destroy that project.  Stop trying!"\n        wants.js { render :template => "display_errors.rjs" }\n      end\n    end\n    \n  end\n  \n== Singleton Resource\n\nIf you want to create a singleton RESTful controller inherit from ResourceController::Singleton.\n\n  class AccountsController < ResourceController::Singleton\n  end\n\n...or if need to inherit from some other class:\n\n  class AccountsController < ApplicationController\n    resource_controller :singleton\n  end\n\n*Note:* This type of controllers handle a single resource only so the index action and all the collection helpers (collection_url, collection_path...) are not available for them.\n\nLoading objects in singletons is similar to plural controllers with one exception. For non-nested singleton controllers you should override the object method as it defaults to nil for them.\n\n  class AccountsController < ResourceController::Singleton\n    private\n      def object\n        @object ||= Account.find(session[:account_id])\n      end\n   end\n\nIn other cases you can use the default logic and override it only if you use permalinks or anything special. \n\nSingleton nesting with both :has_many and :has_one associations is provided...\n\n  map.resource :account, :has_many => :options  # /account/options, account is a singleton parent\n  map.resources :users, :has_one => :image  # /users/1/image, image is a singleton child\n\nIf you have the :has_many association with a singleton parent remember to override parent_object for your :has_many controller as it returns nil by default in this case.\n\n  class OptionsController < ResourceController::Base\n    belongs_to :account\n\n    protected\n    def parent_object\n      Account.find(session[:account_id])\n    end\n  end\n\n== Helpers (ResourceController::Helpers)\n\n=== Loading objects\n\nYou want to add something like pagination to your controller...\n\n  class PostsController < ResourceController::Base\n    private\n      def collection\n        @collection ||= end_of_association_chain.find(:all, :page => {:size => 10, :current => params[:page]})\n      end\n  end\n  \nOr maybe you used a permalink...\n\n  class PostsController < ResourceController::Base\n    private\n      def object\n        @object ||= end_of_association_chain.find_by_permalink(param)\n      end\n  end\n\n=== Building objects\n\nMaybe you have some alternative way of building objects...\n\n  class PostsController < ResourceController::Base\n    private\n      def build_object\n        @object ||= end_of_association_chain.build_my_object_some_funky_way object_params\n      end\n  end\n  \n...and there are tons more helpers in the ResourceController::Helpers\n\n== Nested Resources\n\nNested controllers can be a pain, especially if routing is such that you may or may not have a parent.  Not so with Resource Controller.\n\n  class CommentsController < ResourceController::Base\n    belongs_to :post\n  end\n  \nAll of the finding, and creation, and everything will be done at the scope of the post automatically.\n\n== Namespaced Resources\n\n...are handled automatically, and any namespaces are always available, symbolized, in array form @ ResourceController::Helpers#namespaces\n\n== Polymorphic Resources\n\nEverything, including url generation is handled completely automatically.  Take this example...\n  \n  ## comment.rb\n  class Comment\n    belongs_to :commentable, :polymorphic => true\n  end\n  \n  ## comments_controller.rb\n  class CommentsController < ResourceController::Base\n    belongs_to :post, :product, :user\n  end\n  *Note:* Your model doesn\'t have to be polymorphic in the ActiveRecord sense.  It can be associated in whichever way you want.\n  \n  ## routes.rb\n  map.resources :posts, :has_many => :comments\n  map.resources :products, :has_many => :comments\n  map.resources :users, :has_many => :comments\n\nAll you have to do is that, and r_c will infer whichever relationship is present, and perform all the actions at the scope of the parent object.\n\n=== Parent Helpers\n\nYou also get some helpers for reflecting on your parent.\n\n  parent?       # => true/false is there a parent present?\n  parent_type   # => :post\n  parent_model  # => Post\n  parent_object # => @post\n\n=== Non-standard resource names\n\nresource_controller supports overrides for every non-standard configuration of resources.\n\nThe most common example is where the resource has a different name than the associated model.  Simply overriding the model_name helper will get resource_controller working with your model.\n\n  map.resources :tags\n  ...\n  class PhotoTag < ActiveRecord::Base\n  ...\n  class TagsController < ResourceController::Base\n    private\n      def model_name\n        \'photo_tag\'\n      end\n  end\n  \nIn the above example, the variable, and params will be set to @tag, @tags, and params[:tag].  If you\'d like to change that, override object_name.\n\n  def object_name\n    \'photo_tag\'\n  end\n\nIf you\'re using a non-standard controller name, but everything else is standard, overriding resource_name will propagate through all of the other helpers.\n\n  map.resources :tags, :controller => "somethings"\n  ...\n  class Tag < ActiveRecord::Base\n  ...\n  class SomethingsController < ResourceController::Base\n    private\n      def resource_name\n        \'tag\'\n      end\n  end\n  \nFinally, the route_name helper is used by Urligence to determine which url helper to call, so if you have non-standard route names, override it.\n\n  map.resources :tags, :controller => "taggings"\n  ...\n  class Taggings < ActiveRecord::Base\n  ...\n  class TaggingsController < ResourceController::Base\n    private\n      def route_name\n        \'tag\'\n      end\n  end\n\n== Url Helpers\n\nThanks to Urligence, you also get some free url helpers.\n\nNo matter what your controller looks like...\n\n  [edit_|new_]object_url # is the equivalent of saying [edit_|new_]post_url(@post)\n  [edit_|new_]object_url(some_other_object) # allows you to specify an object, but still maintain any paths or namespaces that are present\n  \n  collection_url # is like saying posts_url\n\nUrl helpers are especially useful when working with polymorphic controllers.\n\n  # /posts/1/comments\n  object_url          # => /posts/1/comments/#{@comment.to_param}\n  object_url(comment) # => /posts/1/comments/#{comment.to_param}\n  edit_object_url     # => /posts/1/comments/#{@comment.to_param}/edit\n  collection_url      # => /posts/1/comments\n    \n  # /products/1/comments\n  object_url          # => /products/1/comments/#{@comment.to_param}\n  object_url(comment) # => /products/1/comments/#{comment.to_param}\n  edit_object_url     # => /products/1/comments/#{@comment.to_param}/edit\n  collection_url      # => /products/1/comments\n  \n  # /comments\n  object_url          # => /comments/#{@comment.to_param}\n  object_url(comment) # => /comments/#{comment.to_param}\n  edit_object_url     # => /comments/#{@comment.to_param}/edit\n  collection_url      # => /comments\n  \nOr with namespaced, nested controllers...\n\n  # /admin/products/1/options\n  object_url          # => /admin/products/1/options/#{@option.to_param}\n  object_url(option)  # => /admin/products/1/options/#{option.to_param}\n  edit_object_url     # => /admin/products/1/options/#{@option.to_param}/edit\n  collection_url      # => /admin/products/1/options\n  \nYou get the idea.  Everything is automagical!  All parameters are inferred.\n\n== Credits\n\nresource_controller was created, and is maintained by {James Golick}[http://jamesgolick.com].\n\n== License\n\nresource_controller is available under the {MIT License}[http://en.wikipedia.org/wiki/MIT_License]\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jamesgolick/resource_controller/contents/README.rdoc?ref=master', 'git': 'https://api.github.com/repos/jamesgolick/resource_controller/git/blobs/61a19693d36fc2879af8c726c0003dda32577d3a', 'html': 'https://github.com/jamesgolick/resource_controller/blob/master/README.rdoc'}}
****************************************************************************************************
jamesgolick/markaby
https://api.github.com/repos/jamesgolick/markaby/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '3453fae92d7aac21cbe8ab9cc15452b063821d35', 'size': 7191, 'url': 'https://api.github.com/repos/jamesgolick/markaby/contents/README?ref=master', 'html_url': 'https://github.com/jamesgolick/markaby/blob/master/README', 'git_url': 'https://api.github.com/repos/jamesgolick/markaby/git/blobs/3453fae92d7aac21cbe8ab9cc15452b063821d35', 'download_url': 'https://raw.githubusercontent.com/jamesgolick/markaby/master/README', 'type': 'file', 'content': b'= Markaby (Markup as Ruby)\n\nMarkaby is a very short bit of code for writing HTML pages in pure Ruby.\nIt is an alternative to ERb which weaves the two languages together.\nAlso a replacement for templating languages which use primitive languages\nthat blend with HTML.\n\n== Using Markaby as a Rails plugin\n\nWrite Rails templates in pure Ruby.  Example layout:\n\n  html do\n    head do\n      title \'Products: \' + action_name\n      stylesheet_link_tag \'scaffold\'\n    end\n  \n    body do\n      p flash[:notice], :style => "color: green"\n  \n      self << content_for_layout\n    end\n  end\n\n== Using Markaby as a Ruby class\n\nMarkaby is flaming easy to call from your Ruby classes.\n\n  require \'markaby\'\n\n  mab = Markaby::Builder.new\n  mab.html do\n    head { title "Boats.com" }\n    body do\n      h1 "Boats.com has great deals"\n      ul do\n        li "$49 for a canoe"\n        li "$39 for a raft"\n        li "$29 for a huge boot that floats and can fit 5 people"\n      end\n    end\n  end\n  puts mab.to_s\n\nMarkaby::Builder.new does take two arguments for passing in variables and\na helper object.  You can also affix the block right on to the class.\n\nSee Markaby::Builder for all of that.\n\n= A Note About <tt>instance_eval</tt>\n\nThe Markaby::Builder class is different from the normal Builder class,\nsince it uses <tt>instance_eval</tt> when running blocks.  This cleans\nup the appearance of the Markaby code you write.  If <tt>instance_eval</tt>\nwas not used, the code would look like this:\n\n  mab = Markaby::Builder.new\n  mab.html do\n    mab.head { mab.title "Boats.com" }\n    mab.body do\n      mab.h1 "Boats.com has great deals"\n    end\n  end\n  puts mab.to_s\n\nSo, the advantage is the cleanliness of your code.  The disadvantage is that\nthe block will run inside the Markaby::Builder object\'s scope.  This means\nthat inside these blocks, <tt>self</tt> will be your Markaby::Builder object.\nWhen you use instance variables in these blocks, they will be instance variables\nof the Markaby::Builder object.\n\nThis doesn\'t affect Rails users, but when used in regular Ruby code, it can\nbe a bit disorienting.  You are recommended to put your Markaby code in a\nmodule where it won\'t mix with anything.\n\n= The Six Steps of Markaby\n\nIf you dive right into Markaby, it\'ll probably make good sense, but you\'re\nlikely to run into a few kinks.  Why not review these six steps and commit\nthem memory so you can really *know* what you\'re doing?\n\n== 1. Element Classes\n\nElement classes may be added by hooking methods onto container elements:\n\n  div.entry do\n    h2.entryTitle \'Son of WebPage\'\n    div.entrySection %{by Anthony}\n    div.entryContent \'Okay, once again, the idea here is ...\'\n  end\n\nWhich results in:\n\n  <div class="entry">\n    <h2 class="entryTitle">Son of WebPage</h2>\n    <div class="entrySection">by Anthony</div>\n    <div class="entryContent">Okay, once again, the idea here is ...</div>\n  </div>\n\n== 2. Element IDs\n\nIDs may be added by the use of bang methods:\n\n  div.page! {\n    div.content! {\n      h1 "A Short Short Saintly Dog"\n    }\n  }\n\nWhich results in:\n\n  <div id="page">\n    <div id="content">\n      <h1>A Short Short Saintly Dog</h1>\n    </div>\n  </div>\n\n== 3. Validate Your XHTML 1.0 Output \n\nIf you\'d like Markaby to help you assemble valid XHTML documents,\nyou can use the <tt>xhtml_transitional</tt> or <tt>xhtml_strict</tt>\nmethods in place of the normal <tt>html</tt> tag.\n\n  xhtml_strict do\n    head { ... }\n    body { ... }\n  end\n\nThis will add the XML instruction and the doctype tag to your document.\nAlso, a character set meta tag will be placed inside your <tt>head</tt>\ntag.\n\nNow, since Markaby knows which doctype you\'re using, it checks a big\nlist of valid tags and attributes before printing anything.\n\n  >> div :styl => "padding: 10px" do\n  >>   img :src => "samorost.jpg"\n  >> end\n  InvalidHtmlError: no such attribute `styl\'\n\nMarkaby will also make sure you don\'t use the same element ID twice!\n\n== 4. Escape or No Escape?\n\nMarkaby uses a simple convention for escaping stuff: if a string\nis an argument, it gets escaped.  If the string is in a block, it\ndoesn\'t.\n\nThis is handy if you\'re using something like RedCloth or\nRDoc inside an element.  Pass the string back through the block\nand it\'ll skip out of escaping.\n\n  div.comment { RedCloth.new(str).to_html }\n\nBut, if we have some raw text that needs escaping, pass it in\nas an argument:\n\n  div.comment raw_str\n\nOne caveat: if you have other tags inside a block, the string\npassed back will be ignored.\n\n  div.comment {\n    div.author "_why"\n    div.says "Torpedoooooes!"\n    "<div>Silence.</div>"\n  }\n\nThe final div above won\'t appear in the output.  You can\'t mix\ntag modes like that, friend.\n\n== 5. Auto-stringification\n\nIf you end up using any of your Markaby "tags" as a string, the\ntag won\'t be output.  It\'ll be up to you to add the new string\nback into the HTML output.\n\nThis means if you call <tt>to_s</tt>, you\'ll get a string back.\n\n  div.title { "Rock Bottom" + span(" by Robert Wyatt").to_s }\n\nBut, when you\'re adding strings in Ruby, <tt>to_s</tt> happens automatically.\n\n  div.title { "Rock Bottom" + span(" by Robert Wyatt") }\n\nInterpolation works fine.\n\n  div.title { "Rock Bottom #{span(" by Robert Wyatt")}" }\n\nAnd any other operation you might perform on a string.\n\n  div.menu! \\\n    [\'5.gets\', \'bits\', \'cult\', \'inspect\', \'-h\'].map do |category|\n      link_to category\n    end.\n    join( " | " )\n\n== 6. The <tt>tag!</tt> Method\n\nIf you need to force a tag at any time, call <tt>tag!</tt> with the\ntag name followed by the possible arguments and block.  The CssProxy\nwon\'t work with this technique.\n\n  tag! :select, :id => "country_list" do\n    countries.each do |country|\n      tag! :option, country\n    end\n  end\n\n= A Note About Rails Helpers\n\nWhen used in Rails templates, the Rails helper object is passed into \nMarkaby::Builder.  When you call helper methods inside Markaby, the output\nfrom those methods will be output to the stream.  This is incredibly\nhandy, since most Rails helpers output HTML tags.\n\n  head do\n    javascript_include_tag \'prototype\'\n    autodiscovery_link_tag\n  end\n\nHowever, some methods are designed to give back a String which you can use\nelsewhere.  That\'s okay!  Every method returns a Fragment object, which can\nbe used as a string.\n\n  p { "Total is: #{number_to_human_size @file_bytes}" }\n\nAlso see the Quick Tour above, specifically the stuff about auto-stringification.\n\nIf for any reason you have trouble with fragments, you can just\ncall the <tt>@helpers</tt> object with the method and you\'ll get\nthe String back and nothing will be output.\n\n  p { "Total is: #{@helpers.number_to_human_size @file_bytes}" }\n\nConversely, you may call instance variables from your controller by using\na method and its value will be returned, nothing will be output.\n\n  # Inside imaginary ProductController\n  def list\n    @products = Product.find :all\n  end\n\n  # Inside app/views/product/list.mab\n  products.each do |product|\n    p product.title\n  end\n\n= Credits\n\nMarkaby is a work of immense hope by Tim Fletcher and why the lucky stiff.\nThankyou for giving it a whirl.\n\nMarkaby is inspired by the HTML library within cgi.rb.  Hopefully it will\nturn around and take some cues.\n\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jamesgolick/markaby/contents/README?ref=master', 'git': 'https://api.github.com/repos/jamesgolick/markaby/git/blobs/3453fae92d7aac21cbe8ab9cc15452b063821d35', 'html': 'https://github.com/jamesgolick/markaby/blob/master/README'}}
****************************************************************************************************
jamesgolick/enum_field
https://api.github.com/repos/jamesgolick/enum_field/readme?ref=master
{'name': 'README.rdoc', 'path': 'README.rdoc', 'sha': '6b3c05c07c2a6813482754a8a43728b4dd338aef', 'size': 931, 'url': 'https://api.github.com/repos/jamesgolick/enum_field/contents/README.rdoc?ref=master', 'html_url': 'https://github.com/jamesgolick/enum_field/blob/master/README.rdoc', 'git_url': 'https://api.github.com/repos/jamesgolick/enum_field/git/blobs/6b3c05c07c2a6813482754a8a43728b4dd338aef', 'download_url': 'https://raw.githubusercontent.com/jamesgolick/enum_field/master/README.rdoc', 'type': 'file', 'content': b'= EnumField\n\nMacro to emulate a MySQL enum_field type thing.\n\n== Usage\n\nThis plugin encapsulates a validates_inclusion_of and automatically gives you a \nfew more goodies automatically. That\'s it!\n\n    class Computer < ActiveRecord:Base\n      enum_field :status, [\'on\', \'off\', \'standby\', \'sleep\', \'out of this world\']\n\n      # Optionally with a message to replace the default one\n      # enum_field :status, [\'on\', \'off\', \'standby\', \'sleep\', \'out of this world\'], :message => "incorrect status"\n\n      #...\n    end\n\nThis will give you a few things:\n\n- add a validates_inclusion_of with a simple error message ("invalid #{field}") or your custom message\n- define the following query methods, in the name of expressive code:\n  - on?\n  - off?\n  - standby?\n  - sleep?\n  - out_of_this_world?\n- define the STATUSES constant, which contains the acceptable values\n\n= License\n\nCopyright (c) 2008 James Golick, released under the MIT license\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jamesgolick/enum_field/contents/README.rdoc?ref=master', 'git': 'https://api.github.com/repos/jamesgolick/enum_field/git/blobs/6b3c05c07c2a6813482754a8a43728b4dd338aef', 'html': 'https://github.com/jamesgolick/enum_field/blob/master/README.rdoc'}}
****************************************************************************************************
defunkt/subtlety
https://api.github.com/repos/defunkt/subtlety/readme?ref=master
{'message': 'Not Found', 'documentation_url': 'https://developer.github.com/v3/repos/contents/#get-the-readme'}
****************************************************************************************************
defunkt/zippy
https://api.github.com/repos/defunkt/zippy/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'a82b776aa0538c025c8b97dd14e0c34212ae9fc9', 'size': 75, 'url': 'https://api.github.com/repos/defunkt/zippy/contents/README?ref=master', 'html_url': 'https://github.com/defunkt/zippy/blob/master/README', 'git_url': 'https://api.github.com/repos/defunkt/zippy/git/blobs/a82b776aa0538c025c8b97dd14e0c34212ae9fc9', 'download_url': 'https://raw.githubusercontent.com/defunkt/zippy/master/README', 'type': 'file', 'content': b'Zippy!\n------\n\nhttp://github.com/defunkt/zippy\n\nBy Chris "Zippy" Wanstrath\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/defunkt/zippy/contents/README?ref=master', 'git': 'https://api.github.com/repos/defunkt/zippy/git/blobs/a82b776aa0538c025c8b97dd14e0c34212ae9fc9', 'html': 'https://github.com/defunkt/zippy/blob/master/README'}}
****************************************************************************************************
defunkt/cache_fu
https://api.github.com/repos/defunkt/cache_fu/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '4ea617151a12b66aa37993f81d1f8d9a2df57c19', 'size': 377, 'url': 'https://api.github.com/repos/defunkt/cache_fu/contents/README?ref=master', 'html_url': 'https://github.com/defunkt/cache_fu/blob/master/README', 'git_url': 'https://api.github.com/repos/defunkt/cache_fu/git/blobs/4ea617151a12b66aa37993f81d1f8d9a2df57c19', 'download_url': 'https://raw.githubusercontent.com/defunkt/cache_fu/master/README', 'type': 'file', 'content': b"== cache_fu\n\nA rewrite of acts_as_cached.\n\n== Changes from acts_as_cached 1\n\n- You can no longer set a 'ttl' method on a class.  Instead,\n  pass :ttl to acts_as_cached:\n    >> acts_as_cached :ttl => 15.minutes\n\n- The is_cached? method is aliased as cached?\n\n- set_cache on an instance can take a ttl\n    >> @story.set_cache(15.days)\n\n\nChris Wanstrath [ chris[at]ozmm[dot]org ]\n", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/defunkt/cache_fu/contents/README?ref=master', 'git': 'https://api.github.com/repos/defunkt/cache_fu/git/blobs/4ea617151a12b66aa37993f81d1f8d9a2df57c19', 'html': 'https://github.com/defunkt/cache_fu/blob/master/README'}}
****************************************************************************************************
KirinDave/phosphor
https://api.github.com/repos/KirinDave/phosphor/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'e69de29bb2d1d6434b8b29ae775ad8c2e48c5391', 'size': 0, 'url': 'https://api.github.com/repos/KirinDave/phosphor/contents/README?ref=master', 'html_url': 'https://github.com/KirinDave/phosphor/blob/master/README', 'git_url': 'https://api.github.com/repos/KirinDave/phosphor/git/blobs/e69de29bb2d1d6434b8b29ae775ad8c2e48c5391', 'download_url': 'https://raw.githubusercontent.com/KirinDave/phosphor/master/README', 'type': 'file', 'content': b'', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/KirinDave/phosphor/contents/README?ref=master', 'git': 'https://api.github.com/repos/KirinDave/phosphor/git/blobs/e69de29bb2d1d6434b8b29ae775ad8c2e48c5391', 'html': 'https://github.com/KirinDave/phosphor/blob/master/README'}}
****************************************************************************************************
bmizerany/sinatra
https://api.github.com/repos/bmizerany/sinatra/readme?ref=master
{'name': 'README.rdoc', 'path': 'README.rdoc', 'sha': 'b8543c79657e4f06f5e778e56056349bcd96db10', 'size': 14874, 'url': 'https://api.github.com/repos/bmizerany/sinatra/contents/README.rdoc?ref=master', 'html_url': 'https://github.com/bmizerany/sinatra/blob/master/README.rdoc', 'git_url': 'https://api.github.com/repos/bmizerany/sinatra/git/blobs/b8543c79657e4f06f5e778e56056349bcd96db10', 'download_url': 'https://raw.githubusercontent.com/bmizerany/sinatra/master/README.rdoc', 'type': 'file', 'content': b'= Sinatra\n\nSinatra is a DSL for quickly creating web applications in Ruby with minimal\neffort:\n\n  # myapp.rb\n  require \'rubygems\'\n  require \'sinatra\'\n  get \'/\' do\n    \'Hello world!\'\n  end\n\nInstall the gem and run with:\n\n  sudo gem install sinatra\n  ruby myapp.rb\n\nView at: http://localhost:4567\n\n== Routes\n\nIn Sinatra, a route is an HTTP method paired with an URL matching pattern.\nEach route is associated with a block:\n\n  get \'/\' do\n    .. show something ..\n  end\n\n  post \'/\' do\n    .. create something ..\n  end\n\n  put \'/\' do\n    .. update something ..\n  end\n\n  delete \'/\' do\n    .. annihilate something ..\n  end\n\nRoutes are matched in the order they are defined. The first route that\nmatches the request is invoked.\n\nRoute patterns may include named parameters, accessible via the\n<tt>params</tt> hash:\n\n  get \'/hello/:name\' do\n    # matches "GET /hello/foo" and "GET /hello/bar"\n    # params[:name] is \'foo\' or \'bar\'\n    "Hello #{params[:name]}!"\n  end\n\nYou can also access named parameters via block parameters:\n\n  get \'/hello/:name\' do |n|\n    "Hello #{n}!"\n  end\n\nRoute patterns may also include splat (or wildcard) parameters, accessible\nvia the <tt>params[:splat]</tt> array.\n\n  get \'/say/*/to/*\' do\n    # matches /say/hello/to/world\n    params[:splat] # => ["hello", "world"]\n  end\n\n  get \'/download/*.*\' do\n    # matches /download/path/to/file.xml\n    params[:splat] # => ["path/to/file", "xml"]\n  end\n\nRoute matching with Regular Expressions:\n\n  get %r{/hello/([\\w]+)} do\n    "Hello, #{params[:captures].first}!"\n  end\n\nOr with a block parameter:\n\n  get %r{/hello/([\\w]+)} do |c|\n    "Hello, #{c}!"\n  end\n\nRoutes may include a variety of matching conditions, such as the user agent:\n\n  get \'/foo\', :agent => /Songbird (\\d\\.\\d)[\\d\\/]*?/ do\n    "You\'re using Songbird version #{params[:agent][0]}"\n  end\n\n  get \'/foo\' do\n    # Matches non-songbird browsers\n  end\n\n== Static Files\n\nStatic files are served from the <tt>./public</tt> directory. You can specify\na different location by setting the <tt>:public</tt> option:\n\n  set :public, File.dirname(__FILE__) + \'/static\'\n\nNote that the public directory name is not included in the URL. A file\n<tt>./public/css/style.css</tt> is made available as\n<tt>http://example.com/css/style.css</tt>.\n\n== Views / Templates\n\nTemplates are assumed to be located directly under the <tt>./views</tt>\ndirectory. To use a different views directory:\n\n  set :views, File.dirname(__FILE__) + \'/templates\'\n\nOne important thing to remember is that you always have to reference\ntemplates with symbols, even if they\'re in a subdirectory (in this\ncase use <tt>:\'subdir/template\'</tt>). Rendering methods will render\nany strings passed to them directly.\n\n=== Haml Templates\n\nThe haml gem/library is required to render HAML templates:\n\n  ## You\'ll need to require haml in your app\n  require \'haml\'\n\n  get \'/\' do\n    haml :index\n  end\n\nRenders <tt>./views/index.haml</tt>.\n\n{Haml\'s options}[http://haml.hamptoncatlin.com/docs/rdoc/classes/Haml.html]\ncan be set globally through Sinatra\'s configurations,\nsee {Options and Configurations}[http://www.sinatrarb.com/configuration.html],\nand overridden on an individual basis.\n\n  set :haml, {:format => :html5 } # default Haml format is :xhtml\n\n  get \'/\' do\n    haml :index, :haml_options => {:format => :html4 } # overridden\n  end\n\n\n=== Erb Templates\n\n  ## You\'ll need to require erb in your app\n  require \'erb\'\n\n  get \'/\' do\n    erb :index\n  end\n\nRenders <tt>./views/index.erb</tt>\n\n=== Builder Templates\n\nThe builder gem/library is required to render builder templates:\n\n  ## You\'ll need to require builder in your app\n  require \'builder\'\n\n  get \'/\' do\n    content_type \'application/xml\', :charset => \'utf-8\'\n    builder :index\n  end\n\nRenders <tt>./views/index.builder</tt>.\n\n=== Sass Templates\n\nThe sass gem/library is required to render Sass templates:\n\n  ## You\'ll need to require haml or sass in your app\n  require \'sass\'\n\n  get \'/stylesheet.css\' do\n    content_type \'text/css\', :charset => \'utf-8\'\n    sass :stylesheet\n  end\n\nRenders <tt>./views/stylesheet.sass</tt>.\n\n{Sass\' options}[http://haml.hamptoncatlin.com/docs/rdoc/classes/Sass.html]\ncan be set globally through Sinatra\'s configurations,\nsee {Options and Configurations}[http://www.sinatrarb.com/configuration.html],\nand overridden on an individual basis.\n\n  set :sass, {:style => :compact } # default Sass style is :nested\n\n  get \'/stylesheet.css\' do\n    content_type \'text/css\', :charset => \'utf-8\'\n    sass :stylesheet, :sass_options => {:style => :expanded } # overridden\n  end\n\n\n=== Inline Templates\n\n  get \'/\' do\n    haml \'%div.title Hello World\'\n  end\n\nRenders the inlined template string.\n\n=== Accessing Variables in Templates\n\nTemplates are evaluated within the same context as route handlers. Instance\nvariables set in route handlers are direcly accessible by templates:\n\n  get \'/:id\' do\n    @foo = Foo.find(params[:id])\n    haml \'%h1= @foo.name\'\n  end\n\nOr, specify an explicit Hash of local variables:\n\n  get \'/:id\' do\n    foo = Foo.find(params[:id])\n    haml \'%h1= foo.name\', :locals => { :foo => foo }\n  end\n\nThis is typically used when rendering templates as partials from within\nother templates.\n\n=== In-file Templates\n\nTemplates may be defined at the end of the source file:\n\n  require \'rubygems\'\n  require \'sinatra\'\n\n  get \'/\' do\n    haml :index\n  end\n\n  __END__\n\n  @@ layout\n  %html\n    = yield\n\n  @@ index\n  %div.title Hello world!!!!!\n\nNOTE: In-file templates defined in the source file that requires sinatra\nare automatically loaded. Call the <tt>use_in_file_templates!</tt>\nmethod explicitly if you have in-file templates in other source files.\n\n=== Named Templates\n\nTemplates may also be defined using the top-level <tt>template</tt> method:\n\n  template :layout do\n    "%html\\n  =yield\\n"\n  end\n\n  template :index do\n    \'%div.title Hello World!\'\n  end\n\n  get \'/\' do\n    haml :index\n  end\n\nIf a template named "layout" exists, it will be used each time a template\nis rendered. You can disable layouts by passing <tt>:layout => false</tt>.\n\n  get \'/\' do\n    haml :index, :layout => !request.xhr?\n  end\n\n== Helpers\n\nUse the top-level <tt>helpers</tt> method to define helper methods for use in\nroute handlers and templates:\n\n  helpers do\n    def bar(name)\n      "#{name}bar"\n    end\n  end\n\n  get \'/:name\' do\n    bar(params[:name])\n  end\n\n== Filters\n\nBefore filters are evaluated before each request within the context of the\nrequest and can modify the request and response. Instance variables set in\nfilters are accessible by routes and templates:\n\n  before do\n    @note = \'Hi!\'\n    request.path_info = \'/foo/bar/baz\'\n  end\n\n  get \'/foo/*\' do\n    @note #=> \'Hi!\'\n    params[:splat] #=> \'bar/baz\'\n  end\n\nAfter filter are evaluated after each request within the context of the\nrequest and can also modify the request and response. Instance variables\nset in before filters and routes are accessible by after filters:\n\n  after do\n    puts response.status\n  end\n\n== Halting\n\nTo immediately stop a request within a filter or route use:\n\n  halt\n\nYou can also specify a body when halting ...\n\n  halt \'this will be the body\'\n\nOr set the status and body ...\n\n  halt 401, \'go away!\'\n\n== Passing\n\nA route can punt processing to the next matching route using <tt>pass</tt>:\n\n  get \'/guess/:who\' do\n    pass unless params[:who] == \'Frank\'\n    "You got me!"\n  end\n\n  get \'/guess/*\' do\n    "You missed!"\n  end\n\nThe route block is immediately exited and control continues with the next\nmatching route. If no matching route is found, a 404 is returned.\n\n== Configuration\n\nRun once, at startup, in any environment:\n\n  configure do\n    ...\n  end\n\nRun only when the environment (RACK_ENV environment variable) is set to\n<tt>:production</tt>:\n\n  configure :production do\n    ...\n  end\n\nRun when the environment is set to either <tt>:production</tt> or\n<tt>:test</tt>:\n\n  configure :production, :test do\n    ...\n  end\n\n== Error handling\n\nError handlers run within the same context as routes and before filters, which\nmeans you get all the goodies it has to offer, like <tt>haml</tt>, <tt>erb</tt>,\n<tt>halt</tt>, etc.\n\n=== Not Found\n\nWhen a <tt>Sinatra::NotFound</tt> exception is raised, or the response\'s status\ncode is 404, the <tt>not_found</tt> handler is invoked:\n\n  not_found do\n    \'This is nowhere to be found\'\n  end\n\n=== Error\n\nThe +error+ handler is invoked any time an exception is raised from a route\nblock or before filter. The exception object can be obtained from the\n<tt>sinatra.error</tt> Rack variable:\n\n  error do\n    \'Sorry there was a nasty error - \' + env[\'sinatra.error\'].name\n  end\n\nCustom errors:\n\n  error MyCustomError do\n    \'So what happened was...\' + request.env[\'sinatra.error\'].message\n  end\n\nThen, if this happens:\n\n  get \'/\' do\n    raise MyCustomError, \'something bad\'\n  end\n\nYou get this:\n\n  So what happened was... something bad\n\nSinatra installs special <tt>not_found</tt> and <tt>error</tt> handlers when\nrunning under the development environment.\n\n== Mime types\n\nWhen using <tt>send_file</tt> or static files you may have mime types Sinatra\ndoesn\'t understand. Use +mime_type+ to register them by file extension:\n\n  mime_type :foo, \'text/foo\'\n\n== Rack Middleware\n\nSinatra rides on Rack[http://rack.rubyforge.org/], a minimal standard\ninterface for Ruby web frameworks. One of Rack\'s most interesting capabilities\nfor application developers is support for "middleware" -- components that sit\nbetween the server and your application monitoring and/or manipulating the\nHTTP request/response to provide various types of common functionality.\n\nSinatra makes building Rack middleware pipelines a cinch via a top-level\n+use+ method:\n\n  require \'sinatra\'\n  require \'my_custom_middleware\'\n\n  use Rack::Lint\n  use MyCustomMiddleware\n\n  get \'/hello\' do\n    \'Hello World\'\n  end\n\nThe semantics of +use+ are identical to those defined for the\nRack::Builder[http://rack.rubyforge.org/doc/classes/Rack/Builder.html] DSL\n(most frequently used from rackup files). For example, the +use+ method\naccepts multiple/variable args as well as blocks:\n\n  use Rack::Auth::Basic do |username, password|\n    username == \'admin\' && password == \'secret\'\n  end\n\nRack is distributed with a variety of standard middleware for logging,\ndebugging, URL routing, authentication, and session handling. Sinatra uses\nmany of of these components automatically based on configuration so you\ntypically don\'t have to +use+ them explicitly.\n\n== Testing\n\nSinatra tests can be written using any Rack-based testing library\nor framework. {Rack::Test}[http://gitrdoc.com/brynary/rack-test] is\nrecommended:\n\n  require \'my_sinatra_app\'\n  require \'rack/test\'\n\n  class MyAppTest < Test::Unit::TestCase\n    include Rack::Test::Methods\n\n    def app\n      Sinatra::Application\n    end\n\n    def test_my_default\n      get \'/\'\n      assert_equal \'Hello World!\', last_response.body\n    end\n\n    def test_with_params\n      get \'/meet\', :name => \'Frank\'\n      assert_equal \'Hello Frank!\', last_response.body\n    end\n\n    def test_with_rack_env\n      get \'/\', {}, \'HTTP_USER_AGENT\' => \'Songbird\'\n      assert_equal "You\'re using Songbird!", last_response.body\n    end\n  end\n\nNOTE: The built-in Sinatra::Test module and Sinatra::TestHarness class\nare deprecated as of the 0.9.2 release.\n\n== Sinatra::Base - Middleware, Libraries, and Modular Apps\n\nDefining your app at the top-level works well for micro-apps but has\nconsiderable drawbacks when building reuseable components such as Rack\nmiddleware, Rails metal, simple libraries with a server component, or\neven Sinatra extensions. The top-level DSL pollutes the Object namespace\nand assumes a micro-app style configuration (e.g., a single application\nfile, ./public and ./views directories, logging, exception detail page,\netc.). That\'s where Sinatra::Base comes into play:\n\n  require \'sinatra/base\'\n\n  class MyApp < Sinatra::Base\n    set :sessions, true\n    set :foo, \'bar\'\n\n    get \'/\' do\n      \'Hello world!\'\n    end\n  end\n\nThe MyApp class is an independent Rack component that can act as\nRack middleware, a Rack application, or Rails metal. You can +use+ or\n+run+ this class from a rackup +config.ru+ file; or, control a server\ncomponent shipped as a library:\n\n   MyApp.run! :host => \'localhost\', :port => 9090\n\nThe methods available to Sinatra::Base subclasses are exactly as those\navailable via the top-level DSL. Most top-level apps can be converted to\nSinatra::Base components with two modifications:\n\n* Your file should require +sinatra/base+  instead of +sinatra+;\n  otherwise, all of Sinatra\'s DSL methods are imported into the main\n  namespace.\n* Put your app\'s routes, error handlers, filters, and options in a subclass\n  of Sinatra::Base.\n\n+Sinatra::Base+ is a blank slate. Most options are disabled by default,\nincluding the built-in server. See {Options and Configuration}[http://sinatra.github.com/configuration.html]\nfor details on available options and their behavior.\n\nSIDEBAR: Sinatra\'s top-level DSL is implemented using a simple delegation\nsystem. The +Sinatra::Application+ class -- a special subclass of\nSinatra::Base -- receives all :get, :put, :post, :delete, :before,\n:error, :not_found, :configure, and :set messages sent to the\ntop-level. Have a look at the code for yourself: here\'s the\n{Sinatra::Delegator mixin}[http://github.com/sinatra/sinatra/blob/master/lib/sinatra/base.rb#L1064]\nbeing {included into the main namespace}[http://github.com/sinatra/sinatra/blob/master/lib/sinatra/main.rb#L25].\n\n== Command line\n\nSinatra applications can be run directly:\n\n  ruby myapp.rb [-h] [-x] [-e ENVIRONMENT] [-p PORT] [-s HANDLER]\n\nOptions are:\n\n  -h # help\n  -p # set the port (default is 4567)\n  -e # set the environment (default is development)\n  -s # specify rack server/handler (default is thin)\n  -x # turn on the mutex lock (default is off)\n\n== The Bleeding Edge\n\nIf you would like to use Sinatra\'s latest bleeding code, create a local\nclone and run your app with the <tt>sinatra/lib</tt> directory on the\n<tt>LOAD_PATH</tt>:\n\n  cd myapp\n  git clone git://github.com/sinatra/sinatra.git\n  ruby -Isinatra/lib myapp.rb\n\nAlternatively, you can add the <tt>sinatra/lib</tt> directory to the\n<tt>LOAD_PATH</tt> in your application:\n\n  $LOAD_PATH.unshift File.dirname(__FILE__) + \'/sinatra/lib\'\n  require \'rubygems\'\n  require \'sinatra\'\n\n  get \'/about\' do\n    "I\'m running version " + Sinatra::VERSION\n  end\n\nTo update the Sinatra sources in the future:\n\n  cd myproject/sinatra\n  git pull\n\n== More\n\n* {Project Website}[http://sinatra.github.com/] - Additional documentation,\n  news, and links to other resources.\n* {Contributing}[http://sinatra.github.com/contributing.html] - Find a bug? Need\n  help? Have a patch?\n* {Lighthouse}[http://sinatra.lighthouseapp.com] - Issue tracking and release\n  planning.\n* {Twitter}[http://twitter.com/sinatra]\n* {Mailing List}[http://groups.google.com/group/sinatrarb]\n* {IRC: #sinatra}[irc://chat.freenode.net/#sinatra] on http://freenode.net\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/bmizerany/sinatra/contents/README.rdoc?ref=master', 'git': 'https://api.github.com/repos/bmizerany/sinatra/git/blobs/b8543c79657e4f06f5e778e56056349bcd96db10', 'html': 'https://github.com/bmizerany/sinatra/blob/master/README.rdoc'}}
****************************************************************************************************
jnewland/gsa-prototype
https://api.github.com/repos/jnewland/gsa-prototype/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'dc0378579220e8aec7b30eccfc17c3751897bb91', 'size': 914, 'url': 'https://api.github.com/repos/jnewland/gsa-prototype/contents/README?ref=master', 'html_url': 'https://github.com/jnewland/gsa-prototype/blob/master/README', 'git_url': 'https://api.github.com/repos/jnewland/gsa-prototype/git/blobs/dc0378579220e8aec7b30eccfc17c3751897bb91', 'download_url': 'https://raw.githubusercontent.com/jnewland/gsa-prototype/master/README', 'type': 'file', 'content': b'gsa-prototype\n=============\n\nPrototype/Javascript wrapper for the Google Search Appliance Search Protocol. Fancy cross-domain JSON support included.\n\nInstall\n=======\n\ngsa-prototype requires a custom XSL be installed on your Google Search Appliance\n\n* Login to the GSA Admin Console\n* Click \'Serving\' on the sidebar\n* Create a new frontend named \'json\'\n* Click \'Edit\' beside the newly created frontend\n* Click \'Edit underlying XSLT code\'\n* Select \'Import Stylesheet\'\n* Import the template at xsl/json.xsl\n* Done!\n\nUsage\n=====\n\n>>> var gsa = new Gsa(\'foo.com\')\n>>> gsa.search(\'jesse newland\')\ntrue\n>>> gsa.results.first().get(\'title\')\n"LexBlog IT Director talks about today&#39;s platform upgrade : Real <b>...</b>"\n>>> gsa.results.first().get(\'url\')\n"http://kevin.lexblog.com/2007/07/articles/cool-stuff/lexblog-it-director-talks-about-todays-platform-upgrade/"\n\nSee inline documentation in gsa.js for more details.', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jnewland/gsa-prototype/contents/README?ref=master', 'git': 'https://api.github.com/repos/jnewland/gsa-prototype/git/blobs/dc0378579220e8aec7b30eccfc17c3751897bb91', 'html': 'https://github.com/jnewland/gsa-prototype/blob/master/README'}}
****************************************************************************************************
technoweenie/duplikate
https://api.github.com/repos/technoweenie/duplikate/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '55a9d44cbc29e4622d1d81206061d4bbdbf278c5', 'size': 475, 'url': 'https://api.github.com/repos/technoweenie/duplikate/contents/README?ref=master', 'html_url': 'https://github.com/technoweenie/duplikate/blob/master/README', 'git_url': 'https://api.github.com/repos/technoweenie/duplikate/git/blobs/55a9d44cbc29e4622d1d81206061d4bbdbf278c5', 'download_url': 'https://raw.githubusercontent.com/technoweenie/duplikate/master/README', 'type': 'file', 'content': b"duplikate\n=========\n\n# process the differences between the two directories:\n\ndupe = Duplikate.process 'my-git-repo', 'my-svn-repo'\ndupe.added_files         #=> [..., ...]\ndupe.added_directories   #=> [..., ...]\ndupe.deleted_files       #=> [..., ...]\ndupe.deleted_directories #=> [..., ...]\ndupe.existing_files      #=> [..., ...]\n\ndupe.report\n\n# Or actually make the changes and commit in svn:\n\nDuplikate.execute 'my-git-repo', 'my-svn-repo'\n\nTODO: Actual real-world usage!\n", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/technoweenie/duplikate/contents/README?ref=master', 'git': 'https://api.github.com/repos/technoweenie/duplikate/git/blobs/55a9d44cbc29e4622d1d81206061d4bbdbf278c5', 'html': 'https://github.com/technoweenie/duplikate/blob/master/README'}}
****************************************************************************************************
jnewland/lazy_record
https://api.github.com/repos/jnewland/lazy_record/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'f133988a4d2140b36c6b62ad1c0e324e66c4b5c5', 'size': 1570, 'url': 'https://api.github.com/repos/jnewland/lazy_record/contents/README?ref=master', 'html_url': 'https://github.com/jnewland/lazy_record/blob/master/README', 'git_url': 'https://api.github.com/repos/jnewland/lazy_record/git/blobs/f133988a4d2140b36c6b62ad1c0e324e66c4b5c5', 'download_url': 'https://raw.githubusercontent.com/jnewland/lazy_record/master/README', 'type': 'file', 'content': b'LazyRecord\n==========\n\nProof of concept Lazy-Loading for ActiveRecord. Inspired by the \'kickers\' of Ambition.\n  \n  >> b = Buzz.lazy_find(:first)\n  => #<ActiveRecord::Lazy::Promise computation=#<Proc:0x025d1e50@...>>\n  -------------No SQL query is run until a method is called on this \'Promise\' \n  >> b.to_s\n  -------------Buzz Load (0.000578)   SELECT * FROM buzz LIMIT 1\n  => "Inaugural Buzz"\n  \nUse the +lazy_record+ class method to make this the default for a certain class:\n  \n  class Buzz << ActiveRecord::Base\n    lazy_record\n  end\n  \n  >> b = Buzz.find(:first)\n  => #<ActiveRecord::Lazy::Promise computation=#<Proc:0x025d1e50@...>>\n  -------------No SQL query is run until a method is called on this \'Promise\' \n  >> b.to_s\n  -------------Buzz Load (0.000578)   SELECT * FROM buzz LIMIT 1\n  => "Inaugural Buzz"\n\n\nWhy you might want to use this\n===========\n\nSay you\'ve got some kick-ass cache_fu going on in your views - huge blocks of HTML being cached with a TTL of 30 mins or so.\nBut, each hit on your controller still fires off the \'spensive DB queries to fetch your tag cloud. With lazy loading, these\nqueries aren\'t run until absolutely necessary - giving your DB a rest til your cache expires, and boosting your reqs/sec.\n\n\nWhy you might not want to use this\n===========\n\n  >> b = Buzz.lazy_find(123023424)\n  => #<ActiveRecord::Lazy::Promise computation=#<Proc:0x025d1e50@...>>\n  >> puts "booleans are screwed" if b\n  booleans are screwed\n\n\nPromise code from here: http://moonbase.rydia.net/software/lazy.rb/\n\nContact\n=======\nJesse Newland\njnewland@gmail.com', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jnewland/lazy_record/contents/README?ref=master', 'git': 'https://api.github.com/repos/jnewland/lazy_record/git/blobs/f133988a4d2140b36c6b62ad1c0e324e66c4b5c5', 'html': 'https://github.com/jnewland/lazy_record/blob/master/README'}}
****************************************************************************************************
jnewland/gsa-feeds
https://api.github.com/repos/jnewland/gsa-feeds/readme?ref=master
{'name': 'README.txt', 'path': 'README.txt', 'sha': 'a4b01e6c5f64a8201a352495120f4f5f4c56566c', 'size': 274, 'url': 'https://api.github.com/repos/jnewland/gsa-feeds/contents/README.txt?ref=master', 'html_url': 'https://github.com/jnewland/gsa-feeds/blob/master/README.txt', 'git_url': 'https://api.github.com/repos/jnewland/gsa-feeds/git/blobs/a4b01e6c5f64a8201a352495120f4f5f4c56566c', 'download_url': 'https://raw.githubusercontent.com/jnewland/gsa-feeds/master/README.txt', 'type': 'file', 'content': b'GSA Feeds\n=========\n\nA Ruby wrapper for the Google Search Appliance Feeds Protocol. This protocol exists to push content and metadata to the search appliance for processing, indexing, and serving as search results. Feeds are available in GSA software versions 4.2 and later.', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jnewland/gsa-feeds/contents/README.txt?ref=master', 'git': 'https://api.github.com/repos/jnewland/gsa-feeds/git/blobs/a4b01e6c5f64a8201a352495120f4f5f4c56566c', 'html': 'https://github.com/jnewland/gsa-feeds/blob/master/README.txt'}}
****************************************************************************************************
jnewland/votigoto
https://api.github.com/repos/jnewland/votigoto/readme?ref=master
{'name': 'README.txt', 'path': 'README.txt', 'sha': 'bd654f81704836af90a7ab9e8c6e6ae64ab14b69', 'size': 311, 'url': 'https://api.github.com/repos/jnewland/votigoto/contents/README.txt?ref=master', 'html_url': 'https://github.com/jnewland/votigoto/blob/master/README.txt', 'git_url': 'https://api.github.com/repos/jnewland/votigoto/git/blobs/bd654f81704836af90a7ab9e8c6e6ae64ab14b69', 'download_url': 'https://raw.githubusercontent.com/jnewland/votigoto/master/README.txt', 'type': 'file', 'content': b'README for votigoto\n===================\n\n>> require \'votigoto\'\n=> true\n>> tivo = Votigoto::Base.new("10.0.0.148","SEKRET_MEDIA_ACCESS_KEY")\n=> #<Votigoto::Base:0x14095d8 @mak="SEKRET_MEDIA_ACCESS_KEY", @ip="10.0.0.148">\n>> tivo.shows.first.to_s\n=> "The Daily Show With Jon Stewart - Senator Joe Biden (D-Del.)."', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jnewland/votigoto/contents/README.txt?ref=master', 'git': 'https://api.github.com/repos/jnewland/votigoto/git/blobs/bd654f81704836af90a7ab9e8c6e6ae64ab14b69', 'html': 'https://github.com/jnewland/votigoto/blob/master/README.txt'}}
****************************************************************************************************
defunkt/mofo
https://api.github.com/repos/defunkt/mofo/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'd933fc47501ac17df93143cac5d6e92f0f27d6e5', 'size': 6133, 'url': 'https://api.github.com/repos/defunkt/mofo/contents/README?ref=master', 'html_url': 'https://github.com/defunkt/mofo/blob/master/README', 'git_url': 'https://api.github.com/repos/defunkt/mofo/git/blobs/d933fc47501ac17df93143cac5d6e92f0f27d6e5', 'download_url': 'https://raw.githubusercontent.com/defunkt/mofo/master/README', 'type': 'file', 'content': b'  mofo.          \n- a ruby microformat parser -\n                     engine\n                     dsl\n                     helper\n                     toy\n\n= First, a word\n\nHpricot, while still great, seems destined for deprecation.\n\nIf you\'re into Nokogiri try Prism for your Microformatic needs:\n\nhttp://github.com/mwunsch/prism\n\n= Get Started Immediately\n\n  $ irb -rubygems \n  >> require \'mofo\'\n  => true\n\n  >> fireball = HCard.find \'http://flickr.com/people/gruber/\'\n  => #<HCard:0x6db898 ... >\n\n  >> fireball.nickname\n  => "gruber"\n\n  >> fireball.url\n  => "http://daringfireball.net/"\n\n  >> fireball.n.family_name\n  => "Gruber"\n\n  >> fireball.title\n  => "Raconteur"\n\n  >> fireball.adr.locality\n  => "Philadelphia"\n\n  >> fireball.logo\n  => "http://static.flickr.com/9/buddyicons/44621776@N00.jpg?1117572751"\n\n= Grab It\n\n  $ git clone git://github.com/defunkt/mofo.git\n  $ open http://github.com/defunkt/mofo\n\n= Microwhozit?\n\n  Microformats are tiny little markup definitions built on top of, usually, \n  HTML or XHTML.  \n\n  You have a blog.  You have recent posts on your blog\'s index page.  You have\n  an Atom feed.  You have recent posts on your blog\'s Atom feed.  See where I\'m\n  going with this?\n\n  The hAtom microformat (or uformat) can be embedded in your existing HTML by\n  setting CSS classes with semantic meaning inside of your posts.  A class to signify\n  a post is contained within this div, a class to signify the contents of this\n  h3 are the post\'s title, a class to signify the contents of this span is the\n  blog post\'s author, etc.\n\n  You can then use a microformat parser (like, say, mofo) to extract this information\n  as you would from an Atom feed.  Hell, you can even convert hAtom to Atom.  It\'s an\n  insta-feed!  No extra code required!\n\n  You\'re already doing the work, you see.  Microformats are everywhere.  We just need\n  to set them free.\n\n  Check it:\n\n    <div class="post">\n      <h3>Megadeth Show Last Night</h3>\n      <span class="subtitle">Posted by Chris on June 4th</span>\n      <div class="content">Went to a show last night.  Megadeth.  It was alright.</div>\n    </div>\n\n  Right?  Normal.  Here\'s the same post marked up with hAtom:\n\n    <div class="post hentry">\n      <h3 class="entry-title">Megadeth Show Last Night</h3>\n      <span class="subtitle">Posted by <span class="author vcard fn">Chris</span> on \n      <abbr class="updated" title="2006-06-04T10:32:10Z">June 4th</abbr></span>\n      <div class="content entry-content">Went to a show last night.  Megadeth.  It was alright.</div>\n    </div>\n\n  All I did was add the hentry, entry-title, and entry-content classes to existing containers.  Then I\n  went ahead and wrapped the date in an <abbr> tag giving it a title in the microformat-standard way.  Finally\n  I put a div around Chris signifying it as the author field of the hEntry and making it a valid hCard by\n  including the vcard and fn classes.  It\'s really not all that hard.  Did I mess it up?  Maybe, but I\'m sure I got\n  close.  And I didn\'t even use a reference.  Practice.\n\n  How\'d we parse this, tho?\n\n    $ irb -rubygems\n    >> require \'mofo\'\n    => true\n\n    >> post = HEntry.find \'http://milesofstyle.org/posts/351-megadeth-show-last-night.html\'\n    => #<HEntry:0x6db898 ... > \n\n    >> post.entry_title\n    => "Megadeth Show Last Night"\n\n    >> post.properties\n    => ["entry_content", "updated", "author", "entry_title"]\n\n    >> post.updated\n    => Sun Jun 04 10:32:10 UTC 2006\n\n    >> post.updated.class\n    => Time\n\n    >> post.author\n    => #<HCard:0x6e7b98 @properties=["fn"], @fn="Chris">\n\n    >> post.author.fn\n    => "Chris"\n\n    >> post.entry_content\n    => "Went to a show last night.  Megadeth.  It was alright."\n\n  That\'s, like, stupid easy.  If HEntry.find gets back more than one hEntry, you\'ll get an array.\n\n= Mofo#find\n\n  Everything revolves around the #find method.  Sound familiar?  Yeah.\n\n    >> Microformat.find "http://valid-url.com"\n    >> Microformat.find "/path/to/existing/file"\n    >> Microformat.find :text => "microformat text"\n   \n  Also, #find can be told explicitly to find all (returning an array on failure) or only find\n  the first (returning nil on failure).\n\n    >> Microformat.find :all => "/existing/file"\n    => [ array of microformat objects ] \n\n    >> Microformat.find :first => "/existing/file"\n    => microformat object\n\n    >> Microformat.find "/existing/file"\n    => either an array of objects or just one object\n\n  :all and :first go outside of :text.\n\n    >> Microformat.find :all => { :text => \'mfin text\' } \n\n  That\'s it.  Some microformats take specific options.\n\n= Microformats\n\n  Here are the currently implemented microformats, along with a site you\n  can use them on today.  We want more, better, faster, stat.\n\n  formats:\n  - hCard     [ flickr profiles    ]\n  - hCalendar [ upcoming.org       ]\n  - hReview   [ cork\'d reviews     ] \n  - hEntry    [ err the blog posts ]\n  - hResume   [ linkedin.com       ]\n  - xoxo      [ chowhound.com      ]\n  - geo       [ upcoming.org       ]\n  - adr       [ upcoming.org       ]\n  - xfn       [ linkedin.com       ]\n\n  patterns:\n  - rel-tag \n  - rel-bookmark\n  - include-pattern\n\n= Ruby on Rails\n\nmofo doubles as a Rails plugin.  Just drop it into vendor/plugins and you are good to go, with all the \navailable microformat parsers loaded into your application.\n\nmofo classes are YAML and Marshal approved.  This means you can cache them with DRb or memcached, or store\nthem in a session.\n\n= More Info\n\n  >> http://microformats.org/ \n  => "The homepage, check"\n  >> http://microformats.org/wiki/\n  => "The wiki, check"\n  >> http://blog.labnotes.org/category/microformats/\n  => "Assaf Arkin knows his MFin\' stuff"\n  >> http://allinthehead.com/\n  => "Drew McClellan, Microformat wizard"\n  >> http://mofo.rubyforge.org/\n  => "mofo HQ"\n\n= Other Parsers\n\n  >> Scrapi\n  => http://rubyforge.org/projects/scrapi/\n  >> uformats\n  => http://rubyforge.org/projects/uformats\n\n= Contributors\n\n  >> Steve Ivy\n  >> Olle Jonsson\n  >> Christian Carter\n  >> Grant Rodgers\n  >> Denis Defreyne\n  >> Andrew Turner\n  >> Mark Murphy\n\n= Author\n\n  >> Chris Wanstrath\n  => chris[at]ozmm[dot]org\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/defunkt/mofo/contents/README?ref=master', 'git': 'https://api.github.com/repos/defunkt/mofo/git/blobs/d933fc47501ac17df93143cac5d6e92f0f27d6e5', 'html': 'https://github.com/defunkt/mofo/blob/master/README'}}
****************************************************************************************************
jnewland/xhtmlize
https://api.github.com/repos/jnewland/xhtmlize/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '553d90d292f708f339fb8596cb1aed31eef23ec7', 'size': 475, 'url': 'https://api.github.com/repos/jnewland/xhtmlize/contents/README?ref=master', 'html_url': 'https://github.com/jnewland/xhtmlize/blob/master/README', 'git_url': 'https://api.github.com/repos/jnewland/xhtmlize/git/blobs/553d90d292f708f339fb8596cb1aed31eef23ec7', 'download_url': 'https://raw.githubusercontent.com/jnewland/xhtmlize/master/README', 'type': 'file', 'content': b'xhtmlize\n==========\n\nRails helper to XHTML-ize chunks of user submitted HTML. For the standardista in all of us.\n\n>> html = "<div><p>foo</p><a href=\'http://foo.com\'>foo"\n=> "<div><p>foo</p><a href=\'http://foo.com\'>foo"\n>> xhtmlize(html)\n=> "<div><p>foo</p><a href=\\"http://foo.com\\">foo</a></div>"\n\nAlso comes with an ActiveRecord class method to automatically xhtmlize attributes in an after_save callback.\n\nclass Comment < ActiveRecord::Base\n  xhtmlize :title, :content\nend', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/jnewland/xhtmlize/contents/README?ref=master', 'git': 'https://api.github.com/repos/jnewland/xhtmlize/git/blobs/553d90d292f708f339fb8596cb1aed31eef23ec7', 'html': 'https://github.com/jnewland/xhtmlize/blob/master/README'}}
****************************************************************************************************
ruby-git/ruby-git
https://api.github.com/repos/ruby-git/ruby-git/readme?ref=master
{'name': 'README.md', 'path': 'README.md', 'sha': 'bc82b9e07246cbf42c9c79f964716872036a8bc6', 'size': 8755, 'url': 'https://api.github.com/repos/ruby-git/ruby-git/contents/README.md?ref=master', 'html_url': 'https://github.com/ruby-git/ruby-git/blob/master/README.md', 'git_url': 'https://api.github.com/repos/ruby-git/ruby-git/git/blobs/bc82b9e07246cbf42c9c79f964716872036a8bc6', 'download_url': 'https://raw.githubusercontent.com/ruby-git/ruby-git/master/README.md', 'type': 'file', 'content': b'# Git Library for Ruby\n\nLibrary for using Git in Ruby.\n\n## Homepage\n\nGit public hosting of the project source code is at:\n\nhttp://github.com/ruby-git/ruby-git\n\n## Install\n\nYou can install Ruby/Git like this:\n\n    $ sudo gem install git\n\n## Code Status\n\n* [![Build Status](https://travis-ci.org/ruby-git/ruby-git.svg?branch=master)](https://travis-ci.org/ruby-git/ruby-git)\n* [![Code Climate](https://codeclimate.com/github/ruby-git/ruby-git.png)](https://codeclimate.com/github/ruby-git/ruby-git)\n* [![Gem Version](https://badge.fury.io/rb/git.png)](http://badge.fury.io/rb/git)\n\n## Major Objects\n\n**Git::Base** - The object returned from a `Git.open` or `Git.clone`. Most major actions are called from this object.\n\n**Git::Object** - The base object for your tree, blob and commit objects, returned from `@git.gtree` or `@git.object` calls.  the `Git::AbstractObject` will have most of the calls in common for all those objects.\n\n**Git::Diff** - returns from a `@git.diff` command.  It is an Enumerable that returns `Git::Diff:DiffFile` objects from which you can get per file patches and insertion/deletion statistics.  You can also get total statistics from the Git::Diff object directly.\n\n**Git::Status** - returns from a `@git.status` command.  It is an Enumerable that returns\n`Git:Status::StatusFile` objects for each object in git, which includes files in the working\ndirectory, in the index and in the repository.  Similar to running \'git status\' on the command line to determine untracked and changed files.\n\n**Git::Branches** - Enumerable object that holds `Git::Branch objects`.  You can call .local or .remote on it to filter to just your local or remote branches.\n\n**Git::Remote**- A reference to a remote repository that is tracked by this repository.\n\n**Git::Log** - An Enumerable object that references all the `Git::Object::Commit` objects that encompass your log query, which can be constructed through methods on the `Git::Log object`,\nlike:\n\n `@git.log(20).object("some_file").since("2 weeks ago").between(\'v2.6\', \'v2.7\').each { |commit| [block] }`\n\n## Examples\n\nHere are a bunch of examples of how to use the Ruby/Git package.\n\nRuby < 1.9 will require rubygems to be loaded.\n\n```ruby\n    require \'rubygems\'\n```\n\nRequire the \'git\' gem.\n```ruby\n    require \'git\'\n```\n\nGit env config\n\n```ruby\n  Git.configure do |config|\n    # If you want to use a custom git binary\n    config.binary_path = \'/git/bin/path\'\n\n    # If you need to use a custom SSH script\n    config.git_ssh = \'/path/to/ssh/script\'\n  end\n\n```\n\n\nHere are the operations that need read permission only.\n\n```ruby\n    g = Git.open(working_dir, :log => Logger.new(STDOUT))\n\n    g.index\n    g.index.readable?\n    g.index.writable?\n    g.repo\n    g.dir\n\n    g.log   # returns array of Git::Commit objects\n    g.log.since(\'2 weeks ago\')\n    g.log.between(\'v2.5\', \'v2.6\')\n    g.log.each {|l| puts l.sha }\n    g.gblob(\'v2.5:Makefile\').log.since(\'2 weeks ago\')\n\n    g.object(\'HEAD^\').to_s  # git show / git rev-parse\n    g.object(\'HEAD^\').contents\n    g.object(\'v2.5:Makefile\').size\n    g.object(\'v2.5:Makefile\').sha\n\n    g.gtree(treeish)\n    g.gblob(treeish)\n    g.gcommit(treeish)\n\n\n    commit = g.gcommit(\'1cc8667014381\')\n\n    commit.gtree\n    commit.parent.sha\n    commit.parents.size\n    commit.author.name\n    commit.author.email\n    commit.author.date.strftime("%m-%d-%y")\n    commit.committer.name\n    commit.date.strftime("%m-%d-%y")\n    commit.message\n\n    tree = g.gtree("HEAD^{tree}")\n\n    tree.blobs\n    tree.subtrees\n    tree.children # blobs and subtrees\n\n    g.revparse(\'v2.5:Makefile\')\n\n    g.branches # returns Git::Branch objects\n    g.branches.local\n    g.branches.remote\n    g.branches[:master].gcommit\n    g.branches[\'origin/master\'].gcommit\n\n    g.grep(\'hello\')  # implies HEAD\n    g.blob(\'v2.5:Makefile\').grep(\'hello\')\n    g.tag(\'v2.5\').grep(\'hello\', \'docs/\')\n    g.describe()\n    g.describe(\'0djf2aa\')\n    g.describe(\'HEAD\', {:all => true, :tags => true})\n\n    g.diff(commit1, commit2).size\n    g.diff(commit1, commit2).stats\n    g.diff(commit1, commit2).name_status\n    g.gtree(\'v2.5\').diff(\'v2.6\').insertions\n    g.diff(\'gitsearch1\', \'v2.5\').path(\'lib/\')\n    g.diff(\'gitsearch1\', @git.gtree(\'v2.5\'))\n    g.diff(\'gitsearch1\', \'v2.5\').path(\'docs/\').patch\n    g.gtree(\'v2.5\').diff(\'v2.6\').patch\n\n    g.gtree(\'v2.5\').diff(\'v2.6\').each do |file_diff|\n       puts file_diff.path\n       puts file_diff.patch\n       puts file_diff.blob(:src).contents\n    end\n\n    g.config(\'user.name\')  # returns \'Scott Chacon\'\n    g.config # returns whole config hash\n\n    g.tags # returns array of Git::Tag objects\n\n    g.show()\n    g.show(\'HEAD\')\n    g.show(\'v2.8\', \'README.md\')\n\n    Git.ls_remote(\'https://github.com/ruby-git/ruby-git.git\') # returns a hash containing the available references of the repo.\n    Git.ls_remote(\'/path/to/local/repo\')\n    Git.ls_remote() # same as Git.ls_remote(\'.\')\n\n```\n\nAnd here are the operations that will need to write to your git repository.\n\n```ruby\n      g = Git.init\n       Git.init(\'project\')\n       Git.init(\'/home/schacon/proj\',\n        { :repository => \'/opt/git/proj.git\',\n           :index => \'/tmp/index\'} )\n\n     g = Git.clone(URI, NAME, :path => \'/tmp/checkout\')\n     g.config(\'user.name\', \'Scott Chacon\')\n     g.config(\'user.email\', \'email@email.com\')\n\n     g.add                                   # git add -- "."\n     g.add(:all=>true)                       # git add --all -- "."\n     g.add(\'file_path\')                      # git add -- "file_path"\n     g.add([\'file_path_1\', \'file_path_2\'])   # git add -- "file_path_1" "file_path_2"\n\n     g.remove()\t\t\t\t\t\t\t\t\t# git rm -f -- "."\n     g.remove(\'file.txt\')\t\t\t\t\t\t# git rm -f -- "file.txt"\n     g.remove([\'file.txt\', \'file2.txt\'])\t\t# git rm -f -- "file.txt" "file2.txt"\n     g.remove(\'file.txt\', :recursive => true) \t# git rm -f -r -- "file.txt"\n     g.remove(\'file.txt\', :cached => true)\t\t# git rm -f --cached -- "file.txt"\n\n     g.commit(\'message\')\n     g.commit_all(\'message\')\n\n     g = Git.clone(repo, \'myrepo\')\n     g.chdir do\n      new_file(\'test-file\', \'blahblahblah\')\n      g.status.changed.each do |file|\n       puts file.blob(:index).contents\n      end\n     end\n\n     g.reset # defaults to HEAD\n     g.reset_hard(Git::Commit)\n\n     g.branch(\'new_branch\') # creates new or fetches existing\n     g.branch(\'new_branch\').checkout\n     g.branch(\'new_branch\').delete\n     g.branch(\'existing_branch\').checkout\n     g.branch(\'master\').contains?(\'existing_branch\')\n\n     g.checkout(\'new_branch\')\n     g.checkout(g.branch(\'new_branch\'))\n\n     g.branch(name).merge(branch2)\n     g.branch(branch2).merge  # merges HEAD with branch2\n\n     g.branch(name).in_branch(message) { # add files }  # auto-commits\n     g.merge(\'new_branch\')\n     g.merge(\'origin/remote_branch\')\n     g.merge(g.branch(\'master\'))\n     g.merge([branch1, branch2])\n\n     g.merge_base(\'branch1\', \'branch2\')\n\n     r = g.add_remote(name, uri)  # Git::Remote\n     r = g.add_remote(name, Git::Base)  # Git::Remote\n\n     g.remotes  # array of Git::Remotes\n     g.remote(name).fetch\n     g.remote(name).remove\n     g.remote(name).merge\n     g.remote(name).merge(branch)\n\n     g.fetch\n     g.fetch(g.remotes.first)\n     g.fetch(\'origin\', {:ref => \'some/ref/head\'} )\n\n     g.pull\n     g.pull(Git::Repo, Git::Branch) # fetch and a merge\n\n     g.add_tag(\'tag_name\') # returns Git::Tag\n     g.add_tag(\'tag_name\', \'object_reference\')\n     g.add_tag(\'tag_name\', \'object_reference\', {:options => \'here\'})\n     g.add_tag(\'tag_name\', {:options => \'here\'})\n\n     Options:\n       :a | :annotate\n       :d\n       :f\n       :m | :message\n       :s\n\n     g.delete_tag(\'tag_name\')\n\n     g.repack\n\n     g.push\n     g.push(g.remote(\'name\'))\n```\n\nSome examples of more low-level index and tree operations\n\n```ruby\n     g.with_temp_index do\n\n       g.read_tree(tree3) # calls self.index.read_tree\n       g.read_tree(tree1, :prefix => \'hi/\')\n\n       c = g.commit_tree(\'message\')\n       # or #\n       t = g.write_tree\n       c = g.commit_tree(t, :message => \'message\', :parents => [sha1, sha2])\n\n       g.branch(\'branch_name\').update_ref(c)\n       g.update_ref(branch, c)\n\n       g.with_temp_working do # new blank working directory\n         g.checkout\n         g.checkout(another_index)\n         g.commit # commits to temp_index\n       end\n     end\n\n     g.set_index(\'/path/to/index\')\n\n\n     g.with_index(path) do\n       # calls set_index, then switches back after\n     end\n\n     g.with_working(dir) do\n     # calls set_working, then switches back after\n     end\n\n     g.with_temp_working(dir) do\n       g.checkout_index(:prefix => dir, :path_limiter => path)\n       # do file work\n       g.commit # commits to index\n     end\n```\n\n## License\n\nlicensed under MIT License Copyright (c) 2008  Scott Chacon. See LICENSE for further details.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/ruby-git/ruby-git/contents/README.md?ref=master', 'git': 'https://api.github.com/repos/ruby-git/ruby-git/git/blobs/bc82b9e07246cbf42c9c79f964716872036a8bc6', 'html': 'https://github.com/ruby-git/ruby-git/blob/master/README.md'}}
****************************************************************************************************
ezmobius/bmhsearch
https://api.github.com/repos/ezmobius/bmhsearch/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'eef9f7dfc9d57136e25771ceda0592aaf84f7659', 'size': 1370, 'url': 'https://api.github.com/repos/ezmobius/bmhsearch/contents/README?ref=master', 'html_url': 'https://github.com/ezmobius/bmhsearch/blob/master/README', 'git_url': 'https://api.github.com/repos/ezmobius/bmhsearch/git/blobs/eef9f7dfc9d57136e25771ceda0592aaf84f7659', 'download_url': 'https://raw.githubusercontent.com/ezmobius/bmhsearch/master/README', 'type': 'file', 'content': b"bmhsearch\n    by Zed Shaw\n\n== DESCRIPTION:\n  \nBMHSearch is a fast mime carver.\n\n== FEATURES/PROBLEMS:\n  \n* FIX (list of features or problems)\n\n== SYNOPSYS:\n\n  FIX (code sample of usage)\n\n== REQUIREMENTS:\n\n* FIX (list of requirements)\n\xc3\x9f\n== INSTALL:\n\n* FIX (sudo gem install, anything else)\n\n== LICENSE:\n\n(The MIT License)\n\nCopyright (c) 2007 FIX\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/ezmobius/bmhsearch/contents/README?ref=master', 'git': 'https://api.github.com/repos/ezmobius/bmhsearch/git/blobs/eef9f7dfc9d57136e25771ceda0592aaf84f7659', 'html': 'https://github.com/ezmobius/bmhsearch/blob/master/README'}}
****************************************************************************************************
uggedal/mofo
https://api.github.com/repos/uggedal/mofo/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'b220868f549a1861872f08cbf8d55129824c6587', 'size': 5957, 'url': 'https://api.github.com/repos/uggedal/mofo/contents/README?ref=master', 'html_url': 'https://github.com/uggedal/mofo/blob/master/README', 'git_url': 'https://api.github.com/repos/uggedal/mofo/git/blobs/b220868f549a1861872f08cbf8d55129824c6587', 'download_url': 'https://raw.githubusercontent.com/uggedal/mofo/master/README', 'type': 'file', 'content': b'  mofo.          \n- a ruby microformat parser -\n                     engine\n                     dsl\n                     helper\n                     toy\n\n= Get Started Immediately\n\n  $ irb -rubygems \n  >> require \'mofo\'\n  => true\n\n  >> fireball = HCard.find \'http://flickr.com/people/gruber/\'\n  => #<HCard:0x6db898 ... >\n\n  >> fireball.nickname\n  => "gruber"\n\n  >> fireball.url\n  => "http://daringfireball.net/"\n\n  >> fireball.n.family_name\n  => "Gruber"\n\n  >> fireball.title\n  => "Raconteur"\n\n  >> fireball.adr.locality\n  => "Philadelphia"\n\n  >> fireball.logo\n  => "http://static.flickr.com/9/buddyicons/44621776@N00.jpg?1117572751"\n\n= Grab It\n\n  $ git clone git://github.com/defunkt/mofo.git\n  $ open http://github.com/defunkt/mofo\n\n= Microwhozit?\n\n  Microformats are tiny little markup definitions built on top of, usually, \n  HTML or XHTML.  \n\n  You have a blog.  You have recent posts on your blog\'s index page.  You have\n  an Atom feed.  You have recent posts on your blog\'s Atom feed.  See where I\'m\n  going with this?\n\n  The hAtom microformat (or uformat) can be embedded in your existing HTML by\n  setting CSS classes with semantic meaning inside of your posts.  A class to signify\n  a post is contained within this div, a class to signify the contents of this\n  h3 are the post\'s title, a class to signify the contents of this span is the\n  blog post\'s author, etc.\n\n  You can then use a microformat parser (like, say, mofo) to extract this information\n  as you would from an Atom feed.  Hell, you can even convert hAtom to Atom.  It\'s an\n  insta-feed!  No extra code required!\n\n  You\'re already doing the work, you see.  Microformats are everywhere.  We just need\n  to set them free.\n\n  Check it:\n\n    <div class="post">\n      <h3>Megadeth Show Last Night</h3>\n      <span class="subtitle">Posted by Chris on June 4th</span>\n      <div class="content">Went to a show last night.  Megadeth.  It was alright.</div>\n    </div>\n\n  Right?  Normal.  Here\'s the same post marked up with hAtom:\n\n    <div class="post hentry">\n      <h3 class="entry-title">Megadeth Show Last Night</h3>\n      <span class="subtitle">Posted by <span class="author vcard fn">Chris</span> on \n      <abbr class="updated" title="2006-06-04T10:32:10Z">June 4th</abbr></span>\n      <div class="content entry-content">Went to a show last night.  Megadeth.  It was alright.</div>\n    </div>\n\n  All I did was add the hentry, entry-title, and entry-content classes to existing containers.  Then I\n  went ahead and wrapped the date in an <abbr> tag giving it a title in the microformat-standard way.  Finally\n  I put a div around Chris signifying it as the author field of the hEntry and making it a valid hCard by\n  including the vcard and fn classes.  It\'s really not all that hard.  Did I mess it up?  Maybe, but I\'m sure I got\n  close.  And I didn\'t even use a reference.  Practice.\n\n  How\'d we parse this, tho?\n\n    $ irb -rubygems\n    >> require \'mofo\'\n    => true\n\n    >> post = HEntry.find \'http://milesofstyle.org/posts/351-megadeth-show-last-night.html\'\n    => #<HEntry:0x6db898 ... > \n\n    >> post.entry_title\n    => "Megadeth Show Last Night"\n\n    >> post.properties\n    => ["entry_content", "updated", "author", "entry_title"]\n\n    >> post.updated\n    => Sun Jun 04 10:32:10 UTC 2006\n\n    >> post.updated.class\n    => Time\n\n    >> post.author\n    => #<HCard:0x6e7b98 @properties=["fn"], @fn="Chris">\n\n    >> post.author.fn\n    => "Chris"\n\n    >> post.entry_content\n    => "Went to a show last night.  Megadeth.  It was alright."\n\n  That\'s, like, stupid easy.  If HEntry.find gets back more than one hEntry, you\'ll get an array.\n\n= Mofo#find\n\n  Everything revolves around the #find method.  Sound familiar?  Yeah.\n\n    >> Microformat.find "http://valid-url.com"\n    >> Microformat.find "/path/to/existing/file"\n    >> Microformat.find :text => "microformat text"\n   \n  Also, #find can be told explicitly to find all (returning an array on failure) or only find\n  the first (returning nil on failure).\n\n    >> Microformat.find :all => "/existing/file"\n    => [ array of microformat objects ] \n\n    >> Microformat.find :first => "/existing/file"\n    => microformat object\n\n    >> Microformat.find "/existing/file"\n    => either an array of objects or just one object\n\n  :all and :first go outside of :text.\n\n    >> Microformat.find :all => { :text => \'mfin text\' } \n\n  That\'s it.  Some microformats take specific options.\n\n= Microformats\n\n  Here are the currently implemented microformats, along with a site you\n  can use them on today.  We want more, better, faster, stat.\n\n  formats:\n  - hCard     [ flickr profiles    ]\n  - hCalendar [ upcoming.org       ]\n  - hReview   [ cork\'d reviews     ] \n  - hEntry    [ err the blog posts ]\n  - hResume   [ linkedin.com       ]\n  - xoxo      [ chowhound.com      ]\n  - geo       [ upcoming.org       ]\n  - adr       [ upcoming.org       ]\n  - xfn       [ linkedin.com       ]\n\n  patterns:\n  - rel-tag \n  - rel-bookmark\n  - include-pattern\n\n= Ruby on Rails\n\nmofo doubles as a Rails plugin.  Just drop it into vendor/plugins and you are good to go, with all the \navailable microformat parsers loaded into your application.\n\nmofo classes are YAML and Marshal approved.  This means you can cache them with DRb or memcached, or store\nthem in a session.\n\n= More Info\n\n  >> http://microformats.org/ \n  => "The homepage, check"\n  >> http://microformats.org/wiki/\n  => "The wiki, check"\n  >> http://blog.labnotes.org/category/microformats/\n  => "Assaf Arkin knows his MFin\' stuff"\n  >> http://allinthehead.com/\n  => "Drew McClellan, Microformat wizard"\n  >> http://mofo.rubyforge.org/\n  => "mofo HQ"\n\n= Other Parsers\n\n  >> Scrapi\n  => http://rubyforge.org/projects/scrapi/\n  >> uformats\n  => http://rubyforge.org/projects/uformats\n\n= Contributors\n\n  >> Steve Ivy\n  >> Olle Jonsson\n  >> Christian Carter\n  >> Grant Rodgers\n  >> Denis Defreyne\n  >> Andrew Turner\n  >> Mark Murphy\n\n= Author\n\n  >> Chris Wanstrath\n  => chris[at]ozmm[dot]org\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/uggedal/mofo/contents/README?ref=master', 'git': 'https://api.github.com/repos/uggedal/mofo/git/blobs/b220868f549a1861872f08cbf8d55129824c6587', 'html': 'https://github.com/uggedal/mofo/blob/master/README'}}
****************************************************************************************************
mmower/simply_versioned
https://api.github.com/repos/mmower/simply_versioned/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '9600b0880efb1639249610fb748e88b878d0ec56', 'size': 4167, 'url': 'https://api.github.com/repos/mmower/simply_versioned/contents/README?ref=master', 'html_url': 'https://github.com/mmower/simply_versioned/blob/master/README', 'git_url': 'https://api.github.com/repos/mmower/simply_versioned/git/blobs/9600b0880efb1639249610fb748e88b878d0ec56', 'download_url': 'https://raw.githubusercontent.com/mmower/simply_versioned/master/README', 'type': 'file', 'content': b'SimplyVersioned\n===============\n\nRelease:\t1.0.0\nDate:\t\t\t28-01-2008\nAuthor:\t\tMatt Mower <self@mattmower.com>\n\nSimplyVersioned is a simple, non-invasive, approach to versioning ActiveRecord models.\n\nSimplyVersioned does not require any structural change to the models to be versioned and requires only one versions table to be created (a migration generator is supplied with the plugin) for the application, regardless of the number of models being versioned.\n\nThe plugin introduces a \'Version\' ActiveRecord model (that reflects changes to model attributes) to which versioned models are polymorphically associated. Version records store the model information as a YAML hash.\n\t\nSimplyVersioned meets a simple need for model versioning. If your needs are more complex maybe try Rick Olsen\'s acts_as_versioned (http://svn.techno-weenie.net/projects/plugins/acts_as_versioned/).\n\t\nSimplyVersioned is (so far) actively tested with Rails 2.0.2 and Ruby 1.8.6\n\t\nUsage\n=====\n\n1. Install the plugin\n\n  ./script/plugin install http://rubymatt.rubyforge.org/svn/simply_versioned\n\n2. Generate the migration\n\n  ./script/generate simply_versioned_migration\n\n\tNote that the migration defaults to storing the version info in a TEXT field. On MySQL this will default to a\n\tlimit of 64K. If you are versioning particularly large models you will want to modify the migration to include\n\ta :limit => n condition to promote the yaml column to a MEDIUMTEXT or (god forbid) a LONGTEXT.\n\n3. Create the versions table\n\n  rake db:migrate\n\n4. Annotate the models you want to version specifying how many versions to keep\n\n\tclass Thing < ActiveRecord::Base\n\t  simply_versioned :keep => 10\n\tend\n\t\n\tIf you do not specify a limit then old versions are never automatically deleted. You can\n\tmanually delete them like this:\n\t\n\tthing.versions.purge( 10 )\n\t\n\twhich would delete all the but the last ten versions.\n\t\n\tIf you want fine-grained control over when versions are created you can use:\n\t\n\tclass Thing < ActiveRecord::Base\n\t\tsimply_versioned :automatic => false\n\tend\n\t\n\tand new versions will no longer be created by default. You will then need to use\n\tthe with_versioning method to create a version.\n\t\n\tLastly you can control which columns will be versioned by specifying an exclude parameter.\n\t\n\tclass Thing < ActiveRecord::Base\n\t\tsimply_versioned :exclude => :awkward_column\n\tend\n\t\t\n\tor\t\n\t\n\tclass Thing < ActiveRecord::Base\n\t\tsimply_versioned :exclude => [:first_awkward_column,:second_awkward_column,...]\n\tend\n\t\n\tThis may be helpful if you run into conflicts with other plugins which try to manage columns.\n\n5. Create versions\n\n\tthing = Thing.create!( :foo => bar ) # creates v1\n\tthing.foo = baz\n\tthing.save! # creates v2\n\t\n\tIf you need to control whether a version is created or not, use #with_versioning. For example:\n\t\n\tthing.with_versioning( false ) do |t|\n\t\tt.save!\n\tend\n\t\n\tor, using the "magic pen" (http://dablog.rubypal.com/2007/2/18/the-magic-pens-of-ruby thanks hmj):\n\t\n\tthing.with_versioning( false, &:save! )\n\n6. Find versions\n\n\tthing.versions.each do |version| ... end\n\trender :partial => \'thing_version\', :collection => thing.versions\n\tthing.versions.current\n\tthing.versions.first\n\tthing.versions.get( 3 )\n\t\n\tTo find a version number:\n\t\n\tthing.version_number\n\n7. Revert to a previous version\n\n\tthing.revert_to_version( 5 )\n\t\n\tIf a specific reversion needs to avoid overwriting some column values pass\n\tan :except option, e.g.\n\t\n\tthing.revert_to_version( 1, :except => [:name,:age] )\n\t\n\tThe revert_to_version method also takes an existing Version instance, e.g.\n\t\n\tversion = thing.versions.find( ... )\n\tthing.revert_to_version( version )\n\n8. Traverse versions\n\n\tthing.versions.current.previous\n\tthing.versions.first.next\n\n9. Obtain a copy of a previous versioned model\n\n\tthing.versions.first.model # => Instantiated Thing with versioned values\n\t\nThanks to:\n\n\tChris Wanstrath (http://ozmm.org/) for useful feedback and GitHub\n\tJosh Susser (http://blog.hasmanythrough.com/) for useful suggestions and feedback\n\tRick Olson (http://techno-weenie.net/) for all the many plugins whose code i\'ve read\n\t\nCopyright (c) 2007 Matt Mower <self@mattmower.com> and released under the MIT license\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/mmower/simply_versioned/contents/README?ref=master', 'git': 'https://api.github.com/repos/mmower/simply_versioned/git/blobs/9600b0880efb1639249610fb748e88b878d0ec56', 'html': 'https://github.com/mmower/simply_versioned/blob/master/README'}}
****************************************************************************************************
abhay/gchart
https://api.github.com/repos/abhay/gchart/readme?ref=master
{'name': 'README.txt', 'path': 'README.txt', 'sha': '25a7a90c8e9a433d648383e17a6fcf9b00a52cb7', 'size': 2957, 'url': 'https://api.github.com/repos/abhay/gchart/contents/README.txt?ref=master', 'html_url': 'https://github.com/abhay/gchart/blob/master/README.txt', 'git_url': 'https://api.github.com/repos/abhay/gchart/git/blobs/25a7a90c8e9a433d648383e17a6fcf9b00a52cb7', 'download_url': 'https://raw.githubusercontent.com/abhay/gchart/master/README.txt', 'type': 'file', 'content': b'= GChart\n\n== DESCRIPTION\n  \nGChart exposes the Google Chart API (http://code.google.com/apis/chart) via\na friendly Ruby interface. It can generate the URL for a given chart\n(for webpage use), or download the generated PNG (for offline use).\n\n== PROBLEMS/TODO\n\n* Add support fills (area or background), grid lines, shape markers, range markers \n* Support shorthand colors and color names\n* Make venn data specification friendlier\n\nThere are lots of missing features. Until they\'re implemented, you can directly specify\nquery parameters using the :extras key, e.g.,\n\n  # provides a legend for each data set\n  g = GChart.line(:data => [[1, 2], [3, 4]], :extras => { "chdl" => "First|Second"})\n\n== SYNOPSIS\n\n  # line chart\n  g = GChart.line(:data => [0, 10, 100])\n  \n  # bar chart\n  g = GChart.bar(:data => [100, 1000, 10000])\n  \n  # pie chart (pie3d for a fancier look)\n  g = GChart.pie(:data => [33, 33, 34])\n  \n  # venn diagram (asize, bsize, csize, ab%, bc%, ca%, abc%)\n  g = GChart.venn(:data => [100, 80, 60, 30, 30, 30, 10])\n  \n  # scatter plot (x coords, y coords [, sizes])\n  g = GChart.scatter(:data => [[1, 2, 3, 4, 5], [5, 4, 3, 2, 1], [1, 2, 3, 4, 5]])\n\n  # map chart\n  g = GChart.map(:area => \'usa\', :data => {\'NY\'=>1,\'VA\'=>3,\'CA\'=>2})\n  \n  # meter\n  g = GChart.meter(:data => 70, :label => "70%")\n  \n  # chart title\n  g = GChart.line(:title => "Awesomeness over Time", :data => [0, 10, 100])\n\n  # data set legend\n  g = GChart.line(:data => [[1, 2], [3, 4]], :legend => ["Monkeys", "Ferrets"])\n\n  # data set colors\n  g = GChart.line(:data => [[0, 10, 100], [100, 10, 0]], :colors => ["ff0000", "0000ff"])\n  \n  g.to_url            # generate the chart\'s URL, or\n  g.fetch             # get the bytes, or\n  g.write("foo.png")  # write to a file (defaults to "chart.png")\n  g.write(stream)     # write to anything that quacks like IO\n\n== LICENSE\n\n(The MIT License)\n\nCopyright 2007-2008 John Barnette (jbarnette@rubyforge.org)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/abhay/gchart/contents/README.txt?ref=master', 'git': 'https://api.github.com/repos/abhay/gchart/git/blobs/25a7a90c8e9a433d648383e17a6fcf9b00a52cb7', 'html': 'https://github.com/abhay/gchart/blob/master/README.txt'}}
****************************************************************************************************
benburkert/schemr
https://api.github.com/repos/benburkert/schemr/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '6f01cf8733aba7329cab9f1ee3cbd406351b8e6d', 'size': 20, 'url': 'https://api.github.com/repos/benburkert/schemr/contents/README?ref=master', 'html_url': 'https://github.com/benburkert/schemr/blob/master/README', 'git_url': 'https://api.github.com/repos/benburkert/schemr/git/blobs/6f01cf8733aba7329cab9f1ee3cbd406351b8e6d', 'download_url': 'https://raw.githubusercontent.com/benburkert/schemr/master/README', 'type': 'file', 'content': b'Github for the win!\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/benburkert/schemr/contents/README?ref=master', 'git': 'https://api.github.com/repos/benburkert/schemr/git/blobs/6f01cf8733aba7329cab9f1ee3cbd406351b8e6d', 'html': 'https://github.com/benburkert/schemr/blob/master/README'}}
****************************************************************************************************
abhay/calais
https://api.github.com/repos/abhay/calais/readme?ref=master
{'name': 'README.markdown', 'path': 'README.markdown', 'sha': '7c7c4a62f025f5e61642ff84fb986d310822a744', 'size': 2187, 'url': 'https://api.github.com/repos/abhay/calais/contents/README.markdown?ref=master', 'html_url': 'https://github.com/abhay/calais/blob/master/README.markdown', 'git_url': 'https://api.github.com/repos/abhay/calais/git/blobs/7c7c4a62f025f5e61642ff84fb986d310822a744', 'download_url': 'https://raw.githubusercontent.com/abhay/calais/master/README.markdown', 'type': 'file', 'content': b'# Calais #\nA Ruby interface to the [Open Calais Web Service](http://opencalais.com)\n\n## Features ##\n* Accepts documents in text/plain, text/xml and text/html format.\n* Basic access to the Open Calais API\'s Enlighten action.\n    * Output is RDF representation of input document.\n* Single function ability to extract names, entities and geographies from given text.\n  \n## Synopsis ##\n\nThis is a very basic wrapper to the Open Calais API. It uses the POST endpoint and currently supports the Enlighten action. Here\'s a simple call:\n\n    Calais.enlighten(\n        :content => "The government of the United Kingdom has given corporations like fast food chain McDonald\'s the right to award high school qualifications to employees who complete a company training program.",\n        :content_type => :raw,\n        :license_id => \'your license id\'\n    )\n\nThis is the easiest way to get the RDF-formated response from the OpenCalais service.\n\nIf you want to do something more fun like getting all sorts of fun information about a document, you can try this:\n\n    Calais.process_document(\n        :content => "The government of the United Kingdom has given corporations like fast food chain McDonald\'s the right to award high school qualifications to employees who complete a company training program.",\n        :content_type => :raw,\n        :license_id => \'your license id\'\n    )\n\nThis will return an object containing information extracted from the RDF response.\n\n## Requirements ##\n\n* [Ruby 1.8.5 or better](http://ruby-lang.org)\n* [nokogiri](http://nokogiri.rubyforge.org/nokogiri/), [libxml2](http://xmlsoft.org/), [libxslt](http://xmlsoft.org/xslt/)\n* [curb](http://curb.rubyforge.org/), [libcurl](http://curl.haxx.se/)\n* [json](http://json.rubyforge.org/)\n\n## Install ##\n\nYou can install the Calais gem via Rubygems (`gem install calais`) or by building from source.\n\n## Authors ##\n\n* [Abhay Kumar](http://opensynapse.net) \n\n## Acknowledgements ##\n\n* [Paul Legato](http://www.economaton.com/): Help all around with the new response processor and implementation of the 3.1 API.\n* [Ryan Ong](http://www.ryanong.net/)\n* [Juan Antonio Chavez](https://github.com/TheNaoX): Geographies relevance\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/abhay/calais/contents/README.markdown?ref=master', 'git': 'https://api.github.com/repos/abhay/calais/git/blobs/7c7c4a62f025f5e61642ff84fb986d310822a744', 'html': 'https://github.com/abhay/calais/blob/master/README.markdown'}}
****************************************************************************************************
mojombo/chronic
https://api.github.com/repos/mojombo/chronic/readme?ref=master
{'name': 'README.md', 'path': 'README.md', 'sha': '07f7c3c08a027401c3821859bbc0bd1b9c4b2f6f', 'size': 4394, 'url': 'https://api.github.com/repos/mojombo/chronic/contents/README.md?ref=master', 'html_url': 'https://github.com/mojombo/chronic/blob/master/README.md', 'git_url': 'https://api.github.com/repos/mojombo/chronic/git/blobs/07f7c3c08a027401c3821859bbc0bd1b9c4b2f6f', 'download_url': 'https://raw.githubusercontent.com/mojombo/chronic/master/README.md', 'type': 'file', 'content': b'Chronic\n=======\n\nChronic is a natural language date/time parser written in pure Ruby. See below\nfor the wide variety of formats Chronic will parse.\n\n## Installation\n\n```\n$ gem install chronic\n```\n\n## Usage\n\n```ruby\nrequire \'chronic\'\n\nTime.now   #=> Sun Aug 27 23:18:25 PDT 2006\n\nChronic.parse(\'tomorrow\')\n  #=> Mon Aug 28 12:00:00 PDT 2006\n\nChronic.parse(\'monday\', :context => :past)\n  #=> Mon Aug 21 12:00:00 PDT 2006\n\nChronic.parse(\'this tuesday 5:00\')\n  #=> Tue Aug 29 17:00:00 PDT 2006\n\nChronic.parse(\'this tuesday 5:00\', :ambiguous_time_range => :none)\n  #=> Tue Aug 29 05:00:00 PDT 2006\n\nChronic.parse(\'may 27th\', :now => Time.local(2000, 1, 1))\n  #=> Sat May 27 12:00:00 PDT 2000\n\nChronic.parse(\'may 27th\', :guess => false)\n  #=> Sun May 27 00:00:00 PDT 2007..Mon May 28 00:00:00 PDT 2007\n\nChronic.parse(\'6/4/2012\', :endian_precedence => :little)\n  #=> Fri Apr 06 00:00:00 PDT 2012\n\nChronic.parse(\'INVALID DATE\')\n  #=> nil\n```\n\nIf the parser can find a date or time, either a Time or Chronic::Span\nwill be returned (depending on the value of `:guess`). If no\ndate or time can be found, `nil` will be returned.\n\nSee `Chronic.parse` for detailed usage instructions.\n\n## Examples\n\nChronic can parse a huge variety of date and time formats. Following is a\nsmall sample of strings that will be properly parsed. Parsing is case\ninsensitive and will handle common abbreviations and misspellings.\n\n#### Simple\n\n* thursday\n* november\n* summer\n* friday 13:00\n* mon 2:35\n* 4pm\n* 10 to 8\n* 10 past 2\n* half past 2\n* 6 in the morning\n* friday 1pm\n* sat 7 in the evening\n* yesterday\n* today\n* tomorrow\n* last week\n* next week\n* this tuesday\n* next month\n* last winter\n* this morning\n* last night\n* this second\n* yesterday at 4:00\n* last friday at 20:00\n* last week tuesday\n* tomorrow at 6:45pm\n* afternoon yesterday\n* thursday last week\n\n#### Complex\n\n* 3 years ago\n* a year ago\n* 5 months before now\n* 7 hours ago\n* 7 days from now\n* 1 week hence\n* in 3 hours\n* 1 year ago tomorrow\n* 3 months ago saturday at 5:00 pm\n* 7 hours before tomorrow at noon\n* 3rd wednesday in november\n* 3rd month next year\n* 3rd thursday this september\n* 4th day last week\n* fourteenth of june 2010 at eleven o\'clock in the evening\n* may seventh \'97 at three in the morning\n\n#### Specific Dates\n\n* January 5\n* 22nd of june\n* 5th may 2017\n* February twenty first\n* dec 25\n* may 27th\n* October 2006\n* oct 06\n* jan 3 2010\n* february 14, 2004\n* february 14th, 2004\n* 3 jan 2000\n* 17 april 85\n* 5/27/1979\n* 27/5/1979\n* 05/06\n* 1979-05-27\n* Friday\n* 5\n* 4:00\n* 17:00\n* 0800\n\n#### Specific Times (many of the above with an added time)\n\n* January 5 at 7pm\n* 22nd of june at 8am\n* 1979-05-27 05:00:00\n* 03/01/2012 07:25:09.234567\n* 2013-08-01T19:30:00.345-07:00\n* 2013-08-01T19:30:00.34-07:00\n* etc\n\n\n## Time Zones\n\nChronic allows you to set which Time class to use when constructing times. By\ndefault, the built in Ruby time class creates times in your system\'s local\ntime zone. You can set this to something like ActiveSupport\'s\n[TimeZone](http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html)\nclass to get full time zone support.\n\n```\n>> Time.zone = "UTC"\n>> Chronic.time_class = Time.zone\n>> Chronic.parse("June 15 2006 at 5:45 AM")\n=> Thu, 15 Jun 2006 05:45:00 UTC +00:00\n```\n\n## Limitations\n\nChronic uses Ruby\'s built in Time class for all time storage and computation.\nBecause of this, only times that the Time class can handle will be properly\nparsed. Parsing for times outside of this range will simply return `nil`.\nSupport for a wider range of times is planned for a future release.\n\n\n## Contribute\n\nIf you\'d like to hack on Chronic, start by forking the repo on GitHub:\n\nhttps://github.com/mojombo/chronic\n\nThe best way to get your changes merged back into core is as follows:\n\n1. Clone down your fork\n1. Create a thoughtfully named topic branch to contain your change\n1. Install the development dependencies by running `bundle install`\n1. Hack away\n1. Add tests and make sure everything still passes by running `bundle exec rake`\n1. Ensure your tests pass in multiple timezones. ie `TZ=utc bundle exec rake` `TZ=BST bundle exec rake`\n1. If you are adding new functionality, document it in the README\n1. Do not change the version number, we will do that on our end\n1. If necessary, rebase your commits into logical chunks, without errors\n1. Push the branch up to GitHub\n1. Send a pull request for your branch\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/mojombo/chronic/contents/README.md?ref=master', 'git': 'https://api.github.com/repos/mojombo/chronic/git/blobs/07f7c3c08a027401c3821859bbc0bd1b9c4b2f6f', 'html': 'https://github.com/mojombo/chronic/blob/master/README.md'}}
****************************************************************************************************
sr/git-wiki
https://api.github.com/repos/sr/git-wiki/readme?ref=master
{'name': 'README.markdown', 'path': 'README.markdown', 'sha': '7f8875a00fe6ab6bdb05d4564095d52c527cbc98', 'size': 3526, 'url': 'https://api.github.com/repos/sr/git-wiki/contents/README.markdown?ref=master', 'html_url': 'https://github.com/sr/git-wiki/blob/master/README.markdown', 'git_url': 'https://api.github.com/repos/sr/git-wiki/git/blobs/7f8875a00fe6ab6bdb05d4564095d52c527cbc98', 'download_url': 'https://raw.githubusercontent.com/sr/git-wiki/master/README.markdown', 'type': 'file', 'content': b'git-wiki: because who needs cool names when you use git?\n========================================================\n\ngit-wiki is a wiki that relies on git to keep pages\' history\nand [Sinatra][] to serve them.\n\nI wrote git-wiki as a quick and dirty hack, mostly to play with Sinatra.\nIt turned out that Sinatra is an awesome little web framework and that this\nhack isn\'t as useless as I first though since I now use it daily.\n\nHowever, it is definitely not feature rich and will probably never be because\nI mostly use it as a web frontend for `git`, `ls` and `vim`.\n\nIf you want history, search, etc. you should look at other people\'s [forks][],\nespecially [al3x][]\'s one.\n\nInstall\n-------\n\nThe fellowing [gems][] are required to run git-wiki:\n\n- [Sinatra][]\n- [mojombo-grit][]\n- [HAML][]\n- [RDiscount][]\n\nRun with `mkdir ~/wiki && (cd ~/wiki && git init) && ./run.ru -sthin -p4567`\nand point your browser at <http://0.0.0.0:4567/>. Enjoy!\n\nSee also\n--------\n\n- [How to use vim to edit &lt;textarea&gt; in lynx][tip]\n- [WiGit][] think git-wiki except implemented in PHP\n- [ikiwiki][] is a wiki compiler supporting git\n\n\n  [Sinatra]: http://www.sinatrarb.com\n  [GitHub]: http://github.com/sr/git-wiki\n  [forks]: http://github.com/sr/git-wiki/network\n  [al3x]: http://github.com/al3x/git-wiki\n  [gems]: http://www.rubygems.org/\n  [mojombo-grit]: http://github.com/mojombo/grit\n  [HAML]: http://haml.hamptoncatlin.com\n  [RDiscount]: http://github.com/rtomayko/rdiscount\n  [tip]: http://wiki.infogami.com/using_lynx_&_vim_with_infogami\n  [WiGit]: http://el-tramo.be/software/wigit\n  [ikiwiki]: http://ikiwiki.info\n\nQuotes\n------\n\n<blockquote>\n<p>[...] the first wiki engine I\'d consider worth using for my own projects.</p>\n<p><cite>\n<a href="http://www.dekorte.com/blog/blog.cgi?do=item&amp;id=3319">\nSteve Dekorte</a>\n</cite></p>\n</blockquote>\n\n<blockquote>\n<p>Oh, it looks like <a href="http://atonie.org/2008/02/git-wiki">Git Wiki</a>\nmay be the starting point for what I need...</p>\n<p><cite><a href="http://tommorris.org/blog/2008/03/09#pid2761430">\nTom Morris on "How to build the perfect wiki"</a></cite></p>\n</blockquote>\n\n<blockquote>\n<p>What makes git-wiki so cool is because it is backed by a git store,\nyou can clone your wiki just like you could any other git repository.\nI\xe2\x80\x99ve always wanted a wiki that I could a.) pull offline when I didn\xe2\x80\x99t\nhave access to the Internets and b.) edit (perhaps in bulk)\nin my favorite text editor. git-wiki allows both.</p>\n<p><cite><a href="http://github.com/willcodeforfoo/git-wiki/wikis">\nCloning your wiki</a></cite></p>\n</blockquote>\n\n<blockquote>\n<p>Numerous people have written diff and merge systems for wikis;\nTWiki even uses RCS. If they used git instead, the repository would be tiny, and\nyou could make a personal copy of the entire wiki to take on the plane with you,\nthen sync your changes back when you\'re done.</p>\n<p><cite><a href="http://www.advogato.org/person/apenwarr/diary/371.html">\nGit is the next Unix</a></cite></p>\n</blockquote>\n\nLicence\n-------\n               DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                       Version 2, December 2004\n\n    Copyright (C) 2008 Simon Rozet <simon@rozet.name>\n    Everyone is permitted to copy and distribute verbatim or modified\n    copies of this license document, and changing it is allowed as long\n    as the name is changed.\n\n               DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n      TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n     0. You just DO WHAT THE FUCK YOU WANT TO.\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/sr/git-wiki/contents/README.markdown?ref=master', 'git': 'https://api.github.com/repos/sr/git-wiki/git/blobs/7f8875a00fe6ab6bdb05d4564095d52c527cbc98', 'html': 'https://github.com/sr/git-wiki/blob/master/README.markdown'}}
****************************************************************************************************
queso/signal-wiki
https://api.github.com/repos/queso/signal-wiki/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '18d80e14c62cdf52a44eb25dd894cedad75cc12e', 'size': 974, 'url': 'https://api.github.com/repos/queso/signal-wiki/contents/README?ref=master', 'html_url': 'https://github.com/queso/signal-wiki/blob/master/README', 'git_url': 'https://api.github.com/repos/queso/signal-wiki/git/blobs/18d80e14c62cdf52a44eb25dd894cedad75cc12e', 'download_url': 'https://raw.githubusercontent.com/queso/signal-wiki/master/README', 'type': 'file', 'content': b'=====  Signal Wiki\n\nSignal Wiki is an easy to use wiki that was built with standards in mind.  It uses some of the more common rails plugins and practises to make sure it is easy to integrate this wiki into your suite of site offerings.  We wanted something we could tie into a shared user table so multiple apps (beast was the app at the time) could have the same login, so we used restful auth.  We had several clients asking for this, so we decided it must be a big need.  With our clients agreement, we extracted the basic wiki parts and cleaned it up and the result is this code.  \n\nEnjoy :)\n\n=====  Installation instructions\n\n#FIXME: Detail these instructions more\n1. Download app\n2. Copy config/database.yml.example to config/database.yml\n3. Run "rake db:migrate" from the root of the app\n4. Start your rails app (using mongrel or fcgi, or whatever crazy method you use)\n5. Input your wiki stuffs\n\n=====  Required Gems\n\n* json\n* ruby-openid\n* ruby-yadis\n* RedCloth\n\n\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/queso/signal-wiki/contents/README?ref=master', 'git': 'https://api.github.com/repos/queso/signal-wiki/git/blobs/18d80e14c62cdf52a44eb25dd894cedad75cc12e', 'html': 'https://github.com/queso/signal-wiki/blob/master/README'}}
****************************************************************************************************
drnic/ruby-on-rails-tmbundle
https://api.github.com/repos/drnic/ruby-on-rails-tmbundle/readme?ref=master
{'name': 'README.md', 'path': 'README.md', 'sha': 'd6680d43118252c0ec81efb8fb5a4cbe6dd174e6', 'size': 794, 'url': 'https://api.github.com/repos/drnic/ruby-on-rails-tmbundle/contents/README.md?ref=master', 'html_url': 'https://github.com/drnic/ruby-on-rails-tmbundle/blob/master/README.md', 'git_url': 'https://api.github.com/repos/drnic/ruby-on-rails-tmbundle/git/blobs/d6680d43118252c0ec81efb8fb5a4cbe6dd174e6', 'download_url': 'https://raw.githubusercontent.com/drnic/ruby-on-rails-tmbundle/master/README.md', 'type': 'file', 'content': b'# TextMate Bundle for Ruby on Rails Development\n\nTo install with Git:\n\n    mkdir -p ~/Library/Application\\ Support/TextMate/Bundles\n    cd ~/Library/Application\\ Support/TextMate/Bundles\n    git clone git://github.com/drnic/ruby-on-rails-tmbundle.git "Ruby on Rails.tmbundle"\n    osascript -e \'tell app "TextMate" to reload bundles\'\n\n\nTo install without Git:\n\n    mkdir -p ~/Library/Application\\ Support/TextMate/Bundles\n    cd ~/Library/Application\\ Support/TextMate/Bundles\n    wget http://github.com/drnic/ruby-on-rails-tmbundle/tarball/master\n    tar zxf drnic-ruby-on-rails-tmbundle*.tar.gz\n    rm drnic-ruby-on-rails-tmbundle*.tar.gz\n    mv drnic-ruby-on-rails-tmbundle* "Ruby on Rails.tmbundle"\n    osascript -e \'tell app "TextMate" to reload bundles\'\n\nRuby 1.8.7 or greater is required.', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/drnic/ruby-on-rails-tmbundle/contents/README.md?ref=master', 'git': 'https://api.github.com/repos/drnic/ruby-on-rails-tmbundle/git/blobs/d6680d43118252c0ec81efb8fb5a4cbe6dd174e6', 'html': 'https://github.com/drnic/ruby-on-rails-tmbundle/blob/master/README.md'}}
****************************************************************************************************
danwrong/low-pro-for-jquery
https://api.github.com/repos/danwrong/low-pro-for-jquery/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '487afe8632f81f932eda5cfd2712ed539f6a4177', 'size': 1525, 'url': 'https://api.github.com/repos/danwrong/low-pro-for-jquery/contents/README?ref=master', 'html_url': 'https://github.com/danwrong/low-pro-for-jquery/blob/master/README', 'git_url': 'https://api.github.com/repos/danwrong/low-pro-for-jquery/git/blobs/487afe8632f81f932eda5cfd2712ed539f6a4177', 'download_url': 'https://raw.githubusercontent.com/danwrong/low-pro-for-jquery/master/README', 'type': 'file', 'content': b"Low Pro JQ\n----------\n\nAuthor: Dan Webb (dan@danwebb.net)\nGIT: github.com:danwrong/low-pro-for-jquery.git\nDownload: http://github.com/danwrong/low-pro-for-jquery/tree/master/src/lowpro.jquery.js?raw=true\n\nA jQuery port of the Low Pro behavior framework that was originally written for Prototype.\n\n\n\nIn brief\n--------\n\nCreate a behavior as a class:\n\nTesty = $.klass({\n initialize: function(arg) {\n   alert('ive just been attached with the arg ' + arg);\n },\n onclick: function() {\n   alert('ive been clicked');\n }\n});\n\nBtw, $.klass is a full port of Prototype's Class.create so youget that as a bonus and \ncan use all the inheritance stuff in the same way.\n\nNext, attach the behavior on DOM ready in the jQuery way:\n\njQuery(function($) {\n $('p').attach(Testy, 'My arg');\n});\n\nAlternatively, if you just need to attach behaviors and get references to the behavior instances\ncreated then you can use:\n\n$('a').attachAndReturn(Clicky, 45) //=> Array of behavior instances\n\nAside from this everything works the same as Low Pro for Prototype.\nSee http://www.danwebb.net/lowpro for details.\n\n\n\nLivequery support\n-----------------\n\nIf the livequery plugin is found then Low Pro will use it to automatically bind behaviors to\nnewly created content so if, taking the above example, you did something like:\n\n$(document.body).append('<p>A new para</p>')\n\nThen it too would get a behavior binded to it.\n\n\n\nAcknowledgements\n----------------\n\nThe $.klass code is a direct port of the Class.create code from Prototype (http://prototypejs.org).", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/danwrong/low-pro-for-jquery/contents/README?ref=master', 'git': 'https://api.github.com/repos/danwrong/low-pro-for-jquery/git/blobs/487afe8632f81f932eda5cfd2712ed539f6a4177', 'html': 'https://github.com/danwrong/low-pro-for-jquery/blob/master/README'}}
****************************************************************************************************
wayneeseguin/merb-core
https://api.github.com/repos/wayneeseguin/merb-core/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '13135169243c2f60b24cb31eb370f578e7b18c71', 'size': 1006, 'url': 'https://api.github.com/repos/wayneeseguin/merb-core/contents/README?ref=master', 'html_url': 'https://github.com/wayneeseguin/merb-core/blob/master/README', 'git_url': 'https://api.github.com/repos/wayneeseguin/merb-core/git/blobs/13135169243c2f60b24cb31eb370f578e7b18c71', 'download_url': 'https://raw.githubusercontent.com/wayneeseguin/merb-core/master/README', 'type': 'file', 'content': b'merb-core is a new branch of Merb (also referred to as merb-next or the 0.9 series) which aims to provide a stable, stripped down API for a future Merb 1.0 release.\n\nThis branch is based off the 0.5 release series but with significant rewrites.\n\nGoals of this release:\n\n  * Stabilize the @public interface methods to provide for a more consistent application development experience.\n  * Remove features until nothing except a central application API is left\n  * Improve comments on methods using a standard documentation methodology as described in DOCUMENTATION_STANDARDS\n  * Separate the tests into two sections... "private" and "public"\n    * Public methods are methods tagged with @public that will be part of the standard, stable Merb API\n    * Private methods are implementation methods that might \n  * Implement a new render API\n  * Build more extensions to regain selected features when needed\n  \nTo familiarize yourself with how a merb-core application might look, reference the /sample directory\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/wayneeseguin/merb-core/contents/README?ref=master', 'git': 'https://api.github.com/repos/wayneeseguin/merb-core/git/blobs/13135169243c2f60b24cb31eb370f578e7b18c71', 'html': 'https://github.com/wayneeseguin/merb-core/blob/master/README'}}
****************************************************************************************************
sr/dst
https://api.github.com/repos/sr/dst/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': '3028afe8505d877023f882df8f7b87c869f68908', 'size': 897, 'url': 'https://api.github.com/repos/sr/dst/contents/README?ref=master', 'html_url': 'https://github.com/sr/dst/blob/master/README', 'git_url': 'https://api.github.com/repos/sr/dst/git/blobs/3028afe8505d877023f882df8f7b87c869f68908', 'download_url': 'https://raw.githubusercontent.com/sr/dst/master/README', 'type': 'file', 'content': b"dst is a KISS GTD manager for the command line lovers.\n\n== Licence\n\ndst is copyright 2008 Simon Rozet. It is licensed under the MIT licence.\nSee the included LICENSE file for details.\n\n== Install\n\n  sudo gem install ape\n\n== Usage\n\n  % dst @mail john@doe.org about foo\n  1 - `@mail john@doe.org about foo' created.\n  % dst @code :myproj fix bug 123\n  2 - `@code :myproj fix bug 123' created.\n  % dst @code :myproj do foo and bar\n  3 - `@code :myproj do foo and bar' created.\n  % dst\n  1 - @mail john@doe.org about foo\n  2 - @code :myproj fix bug\n  3 - @code :myproj do foo and bar\n  % dst @mail\n  1 - @mail john@doe.org about foo\n  % dst :myproj\n  2 - @code :myproj fix bug\n  3 - @code :myproj do foo and bar\n  % dst ^2\n  Ok, `2 - @code :myproj fix bug' marked as `completed'.\n  % dst\n  1 - @mail john@doe.org about foo\n  3 - @code :myproj do foo and bar\n\n== Contact\n\nSimon Rozet, simon@rozet.name\n", 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/sr/dst/contents/README?ref=master', 'git': 'https://api.github.com/repos/sr/dst/git/blobs/3028afe8505d877023f882df8f7b87c869f68908', 'html': 'https://github.com/sr/dst/blob/master/README'}}
****************************************************************************************************
mojombo/yaws
https://api.github.com/repos/mojombo/yaws/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'b562207e2433211e9f4273fc8fd24293b193d19f', 'size': 2690, 'url': 'https://api.github.com/repos/mojombo/yaws/contents/README?ref=master', 'html_url': 'https://github.com/mojombo/yaws/blob/master/README', 'git_url': 'https://api.github.com/repos/mojombo/yaws/git/blobs/b562207e2433211e9f4273fc8fd24293b193d19f', 'download_url': 'https://raw.githubusercontent.com/mojombo/yaws/master/README', 'type': 'file', 'content': b'\nThis is yaws, a webserver for dynamic content written in Erlang.\n\n\nTo build and install\n\n\n1. Get and install an erlang system (http://www.erlang.org)\n\n2. ./configure --prefix=/usr/local\n   This will install everything under /usr/local including var files\n   in /usr/local/var/run/yaws and etc files in\n   /usr/local/etc/yaws.*\n\n  A plain ./configure will install executables under \n  /usr/local/bin and libs in /usr/local/lib/yaws etc and\n  var files will end up under /usr/local/etc and /usr/local/var\n\n\nNote: We can also change the target directory for etc and var \n      directories by using:\n\n  --localstatedir=DIR for files that should go in /var\n  --sysconfdir=DIR for files that should go in /etc\n  --disable-pam  If we for some reason do not want pam support\n  --with-extrainclude=DIR Will add DIR to the include path\n                      May be useful if e.g. pam is installed\n\t\t      somewhere where its usually not found\n  --with-defaultcharset=String  Will set the default charset used\n                        in generated page headers. Usually never needed.\n                        \nThis way you can precisely control where you install Yaws (This is\nusefull for computers where you do not have right access to the \nstandard systemdirs). \n\nFor example:\n./configure --prefix=/home/install/yaws --localstatedir=/home/install/yaws/var --sysconfdir=/home/install/etc\n\n\n2b. Note to packagers (rpm, deb ...) All install targets support the \n    DESTDIR variable.\n    Thus, if we do ./configure --prefix=/usr; make\n    we can subsequently do:\n    DESTDIR=/foo/bar make install\n    All yaws files will be installed under DESTDIR, but all \n    code will assume yaws should be installed under /usr\n\n\n3. make\n     This will build the system\n\n  make docs \n     (Optionnal) You can issue this command if you want to build Yaws\n     documentation.\n\n  make local_install\n     and perform something we call a\n     local install. It will create an executable script in the $HOMe/bin \n     directory and a config file in $HOME/yaws.conf. This is for developers\n     only\n\n4.   To test the build, Start as bin/yaws -i \n     This will start a webserver at http://0.0.0.0:8000\n     Terminate through ^C or > init:stop()\n\n5. as root make install\n\n6. as root Start as /usr/local/bin/yaws -i \n   (this starts an interactive system)\n\n7. This will create a webserver at http://${host} and one at https://${host}\n\n8. as root Edit /etc/yaws.conf \n\n9. Create content in /var/yaws\n\n10a. Start as /usr/local/bin/yaws --daemon --heart\n     This will start a daemon (--daemon) which will be autorestarted when/if\n     it crashes or hangs (--heart)\n\n10b. Or start interactive system as /usr/local/bin/yaws -i\n\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/mojombo/yaws/contents/README?ref=master', 'git': 'https://api.github.com/repos/mojombo/yaws/git/blobs/b562207e2433211e9f4273fc8fd24293b193d19f', 'html': 'https://github.com/mojombo/yaws/blob/master/README'}}
****************************************************************************************************
KirinDave/yaws
https://api.github.com/repos/KirinDave/yaws/readme?ref=master
{'name': 'README', 'path': 'README', 'sha': 'b562207e2433211e9f4273fc8fd24293b193d19f', 'size': 2690, 'url': 'https://api.github.com/repos/KirinDave/yaws/contents/README?ref=master', 'html_url': 'https://github.com/KirinDave/yaws/blob/master/README', 'git_url': 'https://api.github.com/repos/KirinDave/yaws/git/blobs/b562207e2433211e9f4273fc8fd24293b193d19f', 'download_url': 'https://raw.githubusercontent.com/KirinDave/yaws/master/README', 'type': 'file', 'content': b'\nThis is yaws, a webserver for dynamic content written in Erlang.\n\n\nTo build and install\n\n\n1. Get and install an erlang system (http://www.erlang.org)\n\n2. ./configure --prefix=/usr/local\n   This will install everything under /usr/local including var files\n   in /usr/local/var/run/yaws and etc files in\n   /usr/local/etc/yaws.*\n\n  A plain ./configure will install executables under \n  /usr/local/bin and libs in /usr/local/lib/yaws etc and\n  var files will end up under /usr/local/etc and /usr/local/var\n\n\nNote: We can also change the target directory for etc and var \n      directories by using:\n\n  --localstatedir=DIR for files that should go in /var\n  --sysconfdir=DIR for files that should go in /etc\n  --disable-pam  If we for some reason do not want pam support\n  --with-extrainclude=DIR Will add DIR to the include path\n                      May be useful if e.g. pam is installed\n\t\t      somewhere where its usually not found\n  --with-defaultcharset=String  Will set the default charset used\n                        in generated page headers. Usually never needed.\n                        \nThis way you can precisely control where you install Yaws (This is\nusefull for computers where you do not have right access to the \nstandard systemdirs). \n\nFor example:\n./configure --prefix=/home/install/yaws --localstatedir=/home/install/yaws/var --sysconfdir=/home/install/etc\n\n\n2b. Note to packagers (rpm, deb ...) All install targets support the \n    DESTDIR variable.\n    Thus, if we do ./configure --prefix=/usr; make\n    we can subsequently do:\n    DESTDIR=/foo/bar make install\n    All yaws files will be installed under DESTDIR, but all \n    code will assume yaws should be installed under /usr\n\n\n3. make\n     This will build the system\n\n  make docs \n     (Optionnal) You can issue this command if you want to build Yaws\n     documentation.\n\n  make local_install\n     and perform something we call a\n     local install. It will create an executable script in the $HOMe/bin \n     directory and a config file in $HOME/yaws.conf. This is for developers\n     only\n\n4.   To test the build, Start as bin/yaws -i \n     This will start a webserver at http://0.0.0.0:8000\n     Terminate through ^C or > init:stop()\n\n5. as root make install\n\n6. as root Start as /usr/local/bin/yaws -i \n   (this starts an interactive system)\n\n7. This will create a webserver at http://${host} and one at https://${host}\n\n8. as root Edit /etc/yaws.conf \n\n9. Create content in /var/yaws\n\n10a. Start as /usr/local/bin/yaws --daemon --heart\n     This will start a daemon (--daemon) which will be autorestarted when/if\n     it crashes or hangs (--heart)\n\n10b. Or start interactive system as /usr/local/bin/yaws -i\n\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/KirinDave/yaws/contents/README?ref=master', 'git': 'https://api.github.com/repos/KirinDave/yaws/git/blobs/b562207e2433211e9f4273fc8fd24293b193d19f', 'html': 'https://github.com/KirinDave/yaws/blob/master/README'}}
****************************************************************************************************
sr/tasks
https://api.github.com/repos/sr/tasks/readme?ref=master
{'message': 'Not Found', 'documentation_url': 'https://developer.github.com/v3/repos/contents/#get-the-readme'}
****************************************************************************************************
mattetti/ruby-on-rails-tmbundle
https://api.github.com/repos/mattetti/ruby-on-rails-tmbundle/readme?ref=master
{'message': 'Not Found', 'documentation_url': 'https://developer.github.com/v3/repos/contents/#get-the-readme'}
****************************************************************************************************
grempe/amazon-ec2
https://api.github.com/repos/grempe/amazon-ec2/readme?ref=master
{'name': 'README.rdoc', 'path': 'README.rdoc', 'sha': '8428ce5106b02c7a354d4b1b62ce51cf09150ad2', 'size': 17241, 'url': 'https://api.github.com/repos/grempe/amazon-ec2/contents/README.rdoc?ref=master', 'html_url': 'https://github.com/grempe/amazon-ec2/blob/master/README.rdoc', 'git_url': 'https://api.github.com/repos/grempe/amazon-ec2/git/blobs/8428ce5106b02c7a354d4b1b62ce51cf09150ad2', 'download_url': 'https://raw.githubusercontent.com/grempe/amazon-ec2/master/README.rdoc', 'type': 'file', 'content': b'= IMPORTANT!\n\nThis Ruby gem is no longer supported and has not been for several years.  It is no longer recommended for public use.  Instead I would recommend looking at the officially supported Amazon Ruby SDK provided by Amazon.com.  See https://aws.amazon.com/sdkforruby/\n\nThanks for your support!\n\n\n= Amazon Web Services Elastic Compute Cloud (EC2) Ruby Gem\n\n== About amazon-ec2\n\nAmazon Web Services offers a compute power on demand capability known as the Elastic Compute Cloud (EC2). The server resources in the cloud can be provisioned on demand by making HTTP Query API calls to EC2.\n\nThis \'amazon-ec2\' Ruby Gem is an interface library that can be used to interact with the Amazon EC2 system and control server resources on demand from your Ruby scripts, or from applications written in your Ruby framework of choice (Ruby on Rails, Merb, etc.).\n\nMore recently, support has been added for the following EC2 related AWS API\'s as well:\n\n* Autoscaling\n* Cloudwatch\n* Elastic Load Balancing (ELB)\n* Relational Database Service (RDS)\n\nFor the most complete and up-to date README information please visit the project homepage at:\n\nhttp://github.com/grempe/amazon-ec2/tree/master\n\nor the official EC2 website at http://aws.amazon.com/ec2\n\n\n== Installation\n\nThis gem follows the standard conventions for installation on any system with Ruby and RubyGems installed and uses Bundler for gem installation and build management.  If you have worked with gems before this will look very familiar.\n\n=== Get an AWS account\n\nBefore you can make use of this gem you will need an Amazon Web Services developer account which you can sign up for at https://aws-portal.amazon.com/gp/aws/developer/registration/index.html.  This account must also be specifically enabled for Amazon EC2 usage.  AWS will provide you with an \'AWS Access Key ID\' and a \'Secret Access Key\' which will allow you to authenticate any API calls you make and ensure correct billing to you for usage of the service.  Take note of these (and keep them secret!).\n\n=== Install the amazon-ec2 gem (Canonical Release)\n\nThis is the standard install for stable releases from RubyGems.\n\n  # Install the gem\n  [sudo] gem install amazon-ec2\n\n\n=== Install from local Git clone (for amazon-ec2 developers)\n\nTo install from git for adding features or fixing bugs, you\'ll need to clone and build.\n\n  git clone git://github.com/grempe/amazon-ec2.git\n  cd amazon-ec2\n  bundle install\n  rake test\n  rake build\n  rake install\n\n\n== Using amazon-ec2\n\nThe library exposes one main interface class AWS::EC2::Base.  It is through an instance of this class that you will perform all the operations for using the EC2 service including query string header signing.\n\nThe public methods on AWS::EC2::Base closely mirror the EC2 Query API, and as such the Query API Reference in the EC2 Developer Guide ( http://developer.amazonwebservices.com/connect/kbcategory.jspa?categoryID=84 ) will prove helpful.\n\n\n=== Setting up\n\nThe \'awshell\' and \'ec2-gem-example.rb\' scripts which will be introduced to you shortly expect your AWS EC2 credentials to be stored as shell environment variables which are accessible to those scripts. This makes them convenient to use whenever you need to do a quick query to see what images you have available to you, what\'s running now, or to start or stop an instance on EC2. You\'ll find \'awshell\' to be a very handy tool. I\'ll describe only the OS X route for setting up (of course the setup steps will vary depending on your particular system and preferred shell). If you don\'t want to do it this way, feel free to copy these scripts from the gem dir to any location where you can run them from and modify them directly to include your credentials.\n\nEdit the file ~/.bash_login and add the following to the existing contents:\n\n  # OPTIONAL : Why \'export RUBYOPT\'? Because we leave loading libs up to you... See : http://gist.github.com/54177\n  export RUBYOPT="rubygems"\n\n  # For amazon-ec2 and amazon s3 ruby gems\n  export AWS_ACCESS_KEY_ID="YOUR_ACCESS_KEY_ID"\n  export AWS_SECRET_ACCESS_KEY="YOUR_SECRET_ACCESS_KEY_ID"\n\nIf you are using EC2 in the EU region, make sure you also set:\n\n  export EC2_URL="https://eu-west-1.ec2.amazonaws.com"\n\n(which you have already if you configured standard EC2 command line tools to work with this region).\n\nOnce you save the file you should close and re-open your terminal so the new variables are made available. You\'ll need to do this close/re-open step for each terminal window you have open (or issue the \'source ~/.bash_login\' command in each). Make sure that this file is only readable by your user so you don\'t inadvertently expose your credentials to other users on your system.\n\nYou can verify that this setup is complete by running the \'set\' in a command window and seeing that your credentials are in the list of shell variables.\n\n=== The basics\n\nThe library exposes one main interface module\n\n  AWS::EC2::Base\n\nThis method requires arguments which include your AWS credentials and it will return an object that you can use to make method calls directly against EC2. All the operations for using the EC2 service, including query string header signing, are handled automatically for you. The connection string will look something like this:\n\n  @ec2 = AWS::EC2::Base.new(:access_key_id => ACCESS_KEY_ID, :secret_access_key => SECRET_ACCESS_KEY)\n\nI\'ve tried to keep the public methods on \'amazon-ec2\' as close as possible to the AWS EC2 Query API. This similarity allows you to reference the Query API Reference in the EC2 Developer Guide and be able to get started right away. In most cases the methods names only differ in how they are presented. e.g. \'DescribeImages\' becomes \'#describe_images()\' in Ruby. Feel free to browse the full RDoc documentation for all classes and methods of \'amazon-ec2\' if you want more details.\n\n\n=== Examples\n\nThe best way to become familiar with \'amazon-ec2\' is to take it for a test drive. We have provided a few simple ways to get you started. There is also some sample code below that should help out in using \'amazon-ec2\' with a plain Ruby script, or as part of a Ruby on Rails application.\n\n==== Using the \'ec2-gem-example.rb\' sample test script\n\nAn example Ruby script which exercises the library a bit more is installed for you to check out when you install this gem. You can run this script to verify that everything is setup and working correctly in your environment. Consult the file which is installed at :\n\n  [your amazon-ec2 gem dir]/examples/ec2-example.rb\n\nSince we also package this sample file in the gem\'s bin/ dir you should also be able to run it from anywhere on your shell path (once you have set your environment variables as described above).\n\n==== Using the \'awshell\' command shell\n\nThe \'awshell\' command shell is actually a standard \'irb\' Ruby shell, with the main difference being we read your AWS credentials from your environment and pre-configure a connection string for you. This lets you run any EC2 command very simply. This has proven to be a valuable tool during the development of this gem and you should try it out. Since we install this tool in your system path as part of the installation of this gem, you should be able to simply run \'awshell\' from any terminal command prompt on your local system. You\'ll see some basic instructions for use, and a few examples when you start \'awshell\'. Go ahead and try it out now. We\'ll wait...\n\nIf you\'re not in front of a terminal shell now (perhaps you\'re browsing this site on your iPhone) this is what you would see:\n\n\n  hostname:/tmp/rails/amazon_test glenn$ awshell\n\n    \'awshell\' usage :\n    This is an interactive \'irb\' command shell that allows you to use all\n    commands available to the amazon-ec2 gem.  You\'ll find this to be a\n    great tool to help you debug issues and practice running commands\n    against the live EC2 servers prior to putting them in your code.\n\n    The EC2 connection is wired to the class instance \'@ec2\'.  Make method calls\n    on this to execute commands on EC2.  Adding a #to_s\n    at the end of any command should give you a full String representation of the\n    response.\n\n      Examples to try:\n\n        returns : all ec2 public methods\n        >> @ec2.methods.sort\n\n        returns : a string representation of ALL images\n        >> @ec2.describe_images.to_s\n\n        returns : an Array of AWS::Response objects, each an EC2 image and its data\n        >> @ec2.describe_images.imagesSet.item\n        >> @ec2.describe_images.imagesSet.item[0] (a hash representing a single item in that array)\n        >> @ec2.describe_images.imagesSet.item[0].to_s (a String representation of that item)\n\n  >> @ec2.describe_images.imagesSet.item[0].to_s\n  => "#<AWS::Response:0x100A465B4 imageId=\\"ami-018e6b68\\" imageLocation=\\"rbuilder-online/phonehome-1.5.6-x86_10132.img.manifest.xml\\" imageOwnerId=\\"099034111737\\" imageState=\\"available\\" isPublic=\\"true\\" parent=#<AWS::Response:0x100A469A6 ...>>"\n\n\n=== Ruby script usage example:\n\nTry out the following bit of code. This should walk through each image returned by a call to #describe_images and print out its key data. Note in the example below that you cannot walk through the results of the #describe_images call with the \'.each\' iterator (You\'ll get errors if you try). You need to instead walk through the Array of items which are in the \'imagesSet\' embedded in the response. This reflects exactly the XML hierarchy of data returned from EC2 which we parse to Ruby OpenStruct objects (AWS::Response).\n\n  #!/usr/bin/env ruby\n\n  require \'rubygems\'\n  require \'AWS\'\n\n  ACCESS_KEY_ID = \'--YOUR AWS ACCESS KEY ID--\'\n  SECRET_ACCESS_KEY = \'--YOUR AWS SECRET ACCESS KEY--\'\n\n  ec2 = AWS::EC2::Base.new(:access_key_id => ACCESS_KEY_ID, :secret_access_key => SECRET_ACCESS_KEY)\n\n  puts "----- listing images owned by \'amazon\' -----"\n  ec2.describe_images(:owner_id => "amazon").imagesSet.item.each do |image|\n    # OpenStruct objects have members!\n    image.members.each do |member|\n      puts "#{member} => #{image[member]}"\n    end\n  end\n\n=== Ruby on Rails usage example:\n\n\n<b>Rails 2.3.x - config/environment.rb</b>\n\n  Rails::Initializer.run do |config|\n   ...\n   config.gem "amazon-ec2", :lib => "AWS", :source => "http://gemcutter.org/"\n   ...\n  end\n\n\n<b>Rails 3.x.x - Gemfile</b>\n\n  ...\n  gem "amazon-ec2", :require => "AWS"\n\n\n<b>app/controllers/my_controller.rb</b>\n\n  [some controller code ...]\n\n  ec2 = AWS::EC2::Base.new(:access_key_id => "YOUR_AWS_ACCESS_KEY_ID", :secret_access_key => "YOUR_AWS_SECRET_ACCESS_KEY")\n\n  # get ALL public images\n  @ec2_images = ec2.describe_images().imagesSet.item\n\n  # Get info on all public EC2 images created by the Amazon EC2 team.\n  @ec2_images_amazon = ec2.describe_images(:owner_id => "amazon").imagesSet.item\n\n  [some more controller code ...]\n\n\n<b>app/views/my/index.rhtml</b>\n\n  <h1>EC2 Test#index</h1>\n\n  <h1>Sample 1 - debug() view</h1>\n\n  <%= debug(@ec2_images_amazon) %>\n\n  <h1>Sample 2 - Build a table</h1>\n\n  <table border=\'1\'>\n    <tr>\n      <th>image.imageId</th>\n      <th>image.imageLocation</th>\n      <th>image.imageOwnerId</th>\n      <th>image.imageState</th>\n      <th>image.isPublic</th>\n    </tr>\n\n    <% for image in @ec2_images_amazon %>\n      <tr>\n        <td><%=h image.imageId %></td>\n        <td><%=h image.imageLocation %></td>\n        <td><%=h image.imageOwnerId %></td>\n        <td><%=h image.imageState %></td>\n        <td><%=h image.isPublic %></td>\n      </tr>\n    <% end %>\n  </table>\n\n  <h1>Sample 3 - Iterate</h1>\n\n  <% @ec2_images_amazon.each do |image| %>\n    <% image.each_pair do |key, value| %>\n      <% unless key == \'parent\' %>\n        <%= "#{key} => #{value}" %><br />\n      <% end %>\n    <% end %>\n    <br />\n  <% end %>\n\n\n=== Important notes regarding the structure of AWS::Response Objects\n\nOne of the key benefits of this new version of the library is that all responses from EC2 are bundled up in a real data structure and no longer require parsing of text. The hash returned is populated directly from the XML given to us by EC2 in response to any command we issue. This means that future changes to the API and what is returned by EC2 will be handled transparently by the gem. This is a huge benefit. What this means though, is that you may have to do a little homework on what actually gets returned by EC2 as XML. For example, when you make a #describe_images call in \'awshell\' what AWS returns behind the scenes looks like:\n\n  <?xml version="1.0"?>\n  <DescribeImagesResponse xmlns="http://ec2.amazonaws.com/doc/2007-01-19/">\n      <imagesSet>\n          <item>\n              <imageId>ami-20b65349</imageId>\n              <imageLocation>ec2-public-images/fedora-core4-base.manifest.xml</imageLocation>\n              <imageState>available</imageState>\n              <imageOwnerId>amazon</imageOwnerId>\n              <isPublic>true</isPublic>\n          </item>\n          <item>\n              <imageId>ami-22b6534b</imageId>\n              <imageLocation>ec2-public-images/fedora-core4-mysql.manifest.xml</imageLocation>\n              <imageState>available</imageState>\n              <imageOwnerId>amazon</imageOwnerId>\n              <isPublic>true</isPublic>\n          </item>\n          <item>\n              <imageId>ami-23b6534a</imageId>\n              <imageLocation>ec2-public-images/fedora-core4-apache.manifest.xml</imageLocation>\n              <imageState>available</imageState>\n              <imageOwnerId>amazon</imageOwnerId>\n              <isPublic>true</isPublic>\n          </item>\n          <item>\n              <imageId>ami-25b6534c</imageId>\n              <imageLocation>ec2-public-images/fedora-core4-apache-mysql.manifest.xml</imageLocation>\n              <imageState>available</imageState>\n              <imageOwnerId>amazon</imageOwnerId>\n              <isPublic>true</isPublic>\n          </item>\n          <item>\n              <imageId>ami-26b6534f</imageId>\n              <imageLocation>ec2-public-images/developer-image.manifest.xml</imageLocation>\n              <imageState>available</imageState>\n              <imageOwnerId>amazon</imageOwnerId>\n              <isPublic>true</isPublic>\n          </item>\n          <item>\n              <imageId>ami-2bb65342</imageId>\n              <imageLocation>ec2-public-images/getting-started.manifest.xml</imageLocation>\n              <imageState>available</imageState>\n              <imageOwnerId>amazon</imageOwnerId>\n              <isPublic>true</isPublic>\n          </item>\n      </imagesSet>\n  </DescribeImagesResponse>\n\nYou can see here the XML the structure that you will need to follow when constructing queries for information and parsing responses from EC2.\n\nSo, for example, if you wanted to get the image ID of the third image listed in the response above you would need to do:\n\n  >> puts @ec2.describe_images(:owner_id => \'amazon\').imagesSet.item[2].imageId\n  ami-23b6534a\n\nEC2 will typically return sets of things (imagesSet, reservationSet, etc.) which we map to ruby Arrays (.imagesSet.item in the example above). If you want to iterate over a response set you will need to iterate over this array. The Arrays will typically contain additional AWS::Response objects that represent each individual item. You\'ll find that you can use the \'awshell\' to help you understand the structure more completely if you try issuing commands there as a way to practice seeing what will be returned and making sure you get exactly what you want.\n\n=== Handling Exceptions\nIf for some reason an error occurs when executing a method (e.g. its arguments were\nincorrect, or it simply failed) then an exception will be thrown.  The exceptions are\ndefined in exceptions.rb as individual classes and should match the exceptions that\nAWS has defined in the API.  If the exception raised cannot be identified then a\nmore generic exception class will be thrown.\n\nThe implication of this is that you need to be prepared to handle any exceptions that\nmay be raised by this library in YOUR code with a \'rescue\' clause.  It is up to you\nto determine how you want to handle these exceptions in your code.\n\n\n== Additional Resources\n\n=== Project Websites\n\n* Project Home : http://github.com/grempe/amazon-ec2/tree/master\n* API Documentation : http://rdoc.info/projects/grempe/amazon-ec2\n* Amazon Web Services : http://aws.amazon.com\n\n== Credits\n\nThe original code for this library was provided by Amazon Web Services, LLC as sample code.  Thanks to them for providing all of us with something to get us started.\n\n== Contact\n\nComments, patches, Git pull requests and bug reports are welcome. Send an email to mailto:glenn@rempe.us or join the Google Groups forum.\n\n== Patches & Pull Requests\n\nPlease follow these steps if you want to send a patch or a GitHub pull request:\n\n* Fork grempe/amazon-ec2\n* Create a topic branch: `git checkout -b my_fix`\n* Make sure you add tests for your changes and that they all pass with \'rake test\'\n* Don\'t change files that you don\'t own like the gemspec or version.rb\n* Commit your changes, one change/fix per commit\n* Push your fixes branch: `git push origin my_fix`\n* Open an Issue on GitHub referencing your branch and send a pull request.\n* Please do not push to `master` on your fork. Using a feature/bugfix branch will make everyone\xe2\x80\x99s life easier.\n\n\nEnjoy!\n\nGlenn Rempe\n\n', 'encoding': 'base64', '_links': {'self': 'https://api.github.com/repos/grempe/amazon-ec2/contents/README.rdoc?ref=master', 'git': 'https://api.github.com/repos/grempe/amazon-ec2/git/blobs/8428ce5106b02c7a354d4b1b62ce51cf09150ad2', 'html': 'https://github.com/grempe/amazon-ec2/blob/master/README.rdoc'}}
****************************************************************************************************
wayneeseguin/merblogger
https://api.github.com/repos/wayneeseguin/merblogger/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
wayneeseguin/merbtastic
https://api.github.com/repos/wayneeseguin/merbtastic/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
wayneeseguin/alogr
https://api.github.com/repos/wayneeseguin/alogr/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
wayneeseguin/autozest
https://api.github.com/repos/wayneeseguin/autozest/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
wayneeseguin/rnginx
https://api.github.com/repos/wayneeseguin/rnginx/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
wayneeseguin/sequel
https://api.github.com/repos/wayneeseguin/sequel/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
bmizerany/simply_versioned
https://api.github.com/repos/bmizerany/simply_versioned/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
peterc/switchpipe
https://api.github.com/repos/peterc/switchpipe/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
hornbeck/arc
https://api.github.com/repos/hornbeck/arc/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
up_the_irons/ebay4r
https://api.github.com/repos/up_the_irons/ebay4r/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
wycats/merb-plugins
https://api.github.com/repos/wycats/merb-plugins/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
up_the_irons/ram
https://api.github.com/repos/up_the_irons/ram/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
defunkt/ambitious_activeldap
https://api.github.com/repos/defunkt/ambitious_activeldap/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
atmos/fitter_happier
https://api.github.com/repos/atmos/fitter_happier/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
brosner/oebfare
https://api.github.com/repos/brosner/oebfare/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
up_the_irons/credit_card_tools
https://api.github.com/repos/up_the_irons/credit_card_tools/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
jnicklas/rorem
https://api.github.com/repos/jnicklas/rorem/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
cristibalan/braid
https://api.github.com/repos/cristibalan/braid/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
jnicklas/uploadcolumn
https://api.github.com/repos/jnicklas/uploadcolumn/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
simonjefford/ruby-on-rails-tmbundle
https://api.github.com/repos/simonjefford/ruby-on-rails-tmbundle/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
leahneukirchen/rack-mirror
https://api.github.com/repos/leahneukirchen/rack-mirror/readme?ref=master
{'message': "API rate limit exceeded for 72.225.209.22. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)", 'documentation_url': 'https://developer.github.com/v3/#rate-limiting'}
****************************************************************************************************
leahneukirchen/coset-mirror
https://api.github.com/repos/leahneukirchen/coset-mirror/readme?ref=master
